{"version":3,"sources":["../../src/decorator/tree/TreeLevelColumn.ts"],"names":[],"mappings":";;AAAA,4BAA8C;AAG9C;;GAEG;AACH;IACI,OAAO,UAAU,MAAc,EAAE,YAAoB;QAEjD,0BAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAClC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,EAAE;SACQ,CAAC,CAAC;IAC7B,CAAC,CAAC;AACN,CAAC;AAVD,0CAUC","file":"TreeLevelColumn.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../\";\r\nimport {ColumnMetadataArgs} from \"../../metadata-args/ColumnMetadataArgs\";\r\n\r\n/**\r\n * Creates a \"level\"/\"length\" column to the table that holds a closure table.\r\n */\r\nexport function TreeLevelColumn(): Function {\r\n    return function (object: Object, propertyName: string) {\r\n\r\n        getMetadataArgsStorage().columns.push({\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            mode: \"treeLevel\",\r\n            options: {}\r\n        } as ColumnMetadataArgs);\r\n    };\r\n}\r\n"],"sourceRoot":"../.."}