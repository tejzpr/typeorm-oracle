{"version":3,"sources":["../../src/metadata/CheckMetadata.ts"],"names":[],"mappings":";;AAIA;;GAEG;AACH;IAiCI,wEAAwE;IACxE,cAAc;IACd,wEAAwE;IAExE,uBAAY,OAGX;QACG,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;QAE7C,IAAI,OAAO,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;YAC1C,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;SACtC;IACL,CAAC;IAED,wEAAwE;IACxE,uBAAuB;IACvB,wEAAwE;IAExE;;;OAGG;IACH,6BAAK,GAAL,UAAM,cAAuC;QACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACjI,OAAO,IAAI,CAAC;IAChB,CAAC;IAEL,oBAAC;AAAD,CA/DA,AA+DC,IAAA;AA/DY,sCAAa","file":"CheckMetadata.js","sourcesContent":["import {EntityMetadata} from \"./EntityMetadata\";\r\nimport {NamingStrategyInterface} from \"../naming-strategy/NamingStrategyInterface\";\r\nimport {CheckMetadataArgs} from \"../metadata-args/CheckMetadataArgs\";\r\n\r\n/**\r\n * Check metadata contains all information about table's check constraints.\r\n */\r\nexport class CheckMetadata {\r\n\r\n    // ---------------------------------------------------------------------\r\n    // Public Properties\r\n    // ---------------------------------------------------------------------\r\n\r\n    /**\r\n     * Entity metadata of the class to which this check constraint is applied.\r\n     */\r\n    entityMetadata: EntityMetadata;\r\n\r\n    /**\r\n     * Target class to which metadata is applied.\r\n     */\r\n    target?: Function|string;\r\n\r\n    /**\r\n     * Check expression.\r\n     */\r\n    expression: string;\r\n\r\n    /**\r\n     * User specified check constraint name.\r\n     */\r\n    givenName?: string;\r\n\r\n    /**\r\n     * Final check constraint name.\r\n     * If check constraint name was given by a user then it stores normalized (by naming strategy) givenName.\r\n     * If check constraint name was not given then its generated.\r\n     */\r\n    name: string;\r\n\r\n    // ---------------------------------------------------------------------\r\n    // Constructor\r\n    // ---------------------------------------------------------------------\r\n\r\n    constructor(options: {\r\n        entityMetadata: EntityMetadata,\r\n        args?: CheckMetadataArgs\r\n    }) {\r\n        this.entityMetadata = options.entityMetadata;\r\n\r\n        if (options.args) {\r\n            this.target = options.args.target;\r\n            this.expression = options.args.expression;\r\n            this.givenName = options.args.name;\r\n        }\r\n    }\r\n\r\n    // ---------------------------------------------------------------------\r\n    // Public Build Methods\r\n    // ---------------------------------------------------------------------\r\n\r\n    /**\r\n     * Builds some depend check constraint properties.\r\n     * Must be called after all entity metadata's properties map, columns and relations are built.\r\n     */\r\n    build(namingStrategy: NamingStrategyInterface): this {\r\n        this.name = this.givenName ? this.givenName : namingStrategy.checkConstraintName(this.entityMetadata.tablePath, this.expression);\r\n        return this;\r\n    }\r\n\r\n}"],"sourceRoot":".."}