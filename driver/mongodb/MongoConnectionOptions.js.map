{"version":3,"sources":["../../src/driver/mongodb/MongoConnectionOptions.ts"],"names":[],"mappings":"","file":"MongoConnectionOptions.js","sourcesContent":["import {BaseConnectionOptions} from \"../../connection/BaseConnectionOptions\";\r\nimport {ReadPreference} from \"./typings\";\r\n\r\n/**\r\n * MongoDB specific connection options.\r\n */\r\nexport interface MongoConnectionOptions extends BaseConnectionOptions {\r\n\r\n    /**\r\n     * Database type.\r\n     */\r\n    readonly type: \"mongodb\";\r\n\r\n    /**\r\n     * Connection url where perform connection to.\r\n     */\r\n    readonly url?: string;\r\n\r\n    /**\r\n     * Database host.\r\n     */\r\n    readonly host?: string;\r\n\r\n    /**\r\n     * Database host port.\r\n     */\r\n    readonly port?: number;\r\n\r\n    /**\r\n     * Database username.\r\n     */\r\n    readonly username?: string;\r\n    \r\n    /**\r\n     * Database password.\r\n     */\r\n    readonly password?: string;\r\n\r\n    /**\r\n     * Database name to connect to.\r\n     */\r\n    readonly database?: string;\r\n\r\n    /**\r\n     * Set the maximum poolSize for each individual server or proxy connection.\r\n     */\r\n    readonly poolSize?: number;\r\n\r\n    /**\r\n     * Use ssl connection (needs to have a mongod server with ssl support). Default: false\r\n     */\r\n    readonly ssl?: boolean;\r\n\r\n    /**\r\n     * Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     * Default: true\r\n     */\r\n    readonly sslValidate?: boolean;\r\n\r\n    /**\r\n     * Array of valid certificates either as Buffers or Strings\r\n     * (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    readonly sslCA?: string[]|Buffer[];\r\n\r\n    /**\r\n     * String or buffer containing the certificate we wish to present\r\n     * (needs to have a mongod server with ssl support, 2.4 or higher)\r\n     */\r\n    readonly sslCert?: string|Buffer;\r\n\r\n    /**\r\n     * String or buffer containing the certificate private key we wish to present\r\n     * (needs to have a mongod server with ssl support, 2.4 or higher)\r\n     */\r\n    readonly sslKey?: string|Buffer;\r\n\r\n    /**\r\n     * String or buffer containing the certificate password\r\n     * (needs to have a mongod server with ssl support, 2.4 or higher)\r\n     */\r\n    readonly sslPass?: string|Buffer;\r\n\r\n    /**\r\n     * Reconnect on error. Default: true\r\n     */\r\n    readonly autoReconnect?: boolean;\r\n\r\n    /**\r\n     * TCP Socket NoDelay option. Default: true\r\n     */\r\n    readonly noDelay?: boolean;\r\n\r\n    /**\r\n     * The number of milliseconds to wait before initiating keepAlive on the TCP socket. Default: 30000\r\n     */\r\n    readonly keepAlive?: number;\r\n\r\n    /**\r\n     * TCP Connection timeout setting. Default: 30000\r\n     */\r\n    readonly connectTimeoutMS?: number;\r\n\r\n    /**\r\n     * TCP Socket timeout setting. Default: 360000\r\n     */\r\n    readonly socketTimeoutMS?: number;\r\n\r\n    /**\r\n     * Server attempt to reconnect #times. Default 30\r\n     */\r\n    readonly reconnectTries?: number;\r\n\r\n    /**\r\n     * Server will wait #milliseconds between retries. Default 1000\r\n     */\r\n    readonly reconnectInterval?: number;\r\n\r\n    /**\r\n     * Turn on high availability monitoring. Default true\r\n     */\r\n    readonly ha?: boolean;\r\n\r\n    /**\r\n     * Time between each replicaset status check. Default: 10000,5000\r\n     */\r\n    readonly haInterval?: number;\r\n\r\n    /**\r\n     * The name of the replicaset to connect to\r\n     */\r\n    readonly replicaSet?: string;\r\n\r\n    /**\r\n     * Sets the range of servers to pick when using NEAREST (lowest ping ms + the latency fence, ex: range of 1 to (1 + 15) ms).\r\n     * Default: 15\r\n     */\r\n    readonly acceptableLatencyMS?: number;\r\n\r\n    /**\r\n     * Sets the range of servers to pick when using NEAREST (lowest ping ms + the latency fence, ex: range of 1 to (1 + 15) ms).\r\n     * Default: 15\r\n     */\r\n    readonly secondaryAcceptableLatencyMS?: number;\r\n\r\n    /**\r\n     * Sets if the driver should connect even if no primary is available. Default: false\r\n     */\r\n    readonly connectWithNoPrimary?: boolean;\r\n\r\n    /**\r\n     * If the database authentication is dependent on another databaseName.\r\n     */\r\n    readonly authSource?: string;\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    readonly w?: string|number;\r\n\r\n    /**\r\n     * The write concern timeout value.\r\n     */\r\n    readonly wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern. Default: false\r\n     */\r\n    readonly j?: boolean;\r\n\r\n    /**\r\n     * Force server to assign _id values instead of driver. Default: false\r\n     */\r\n    readonly forceServerObjectId?: boolean;\r\n\r\n    /**\r\n     * Serialize functions on any object. Default: false\r\n     */\r\n    readonly serializeFunctions?: boolean;\r\n\r\n    /**\r\n     * Specify if the BSON serializer should ignore undefined fields. Default: false\r\n     */\r\n    readonly ignoreUndefined?: boolean;\r\n\r\n    /**\r\n     * Return document results as raw BSON buffers. Default: false\r\n     */\r\n    readonly raw?: boolean;\r\n\r\n    /**\r\n     * Promotes Long values to number if they fit inside the 53 bits resolution. Default: true\r\n     */\r\n    readonly promoteLongs?: boolean;\r\n\r\n    /**\r\n     * Promotes Binary BSON values to native Node Buffers. Default: false\r\n     */\r\n    readonly promoteBuffers?: boolean;\r\n\r\n    /**\r\n     * Promotes BSON values to native types where possible, set to false to only receive wrapper types. Default: true\r\n     */\r\n    readonly promoteValues?: boolean;\r\n\r\n    /**\r\n     * Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit. Default: false\r\n     */\r\n    readonly domainsEnabled?: boolean;\r\n\r\n    /**\r\n     * Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection,\r\n     * default is -1 which is unlimited.\r\n     */\r\n    readonly bufferMaxEntries?: boolean;\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY,\r\n     * ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readonly readPreference?: ReadPreference;\r\n\r\n    /**\r\n     * A primary key factory object for generation of custom _id keys.\r\n     */\r\n    readonly pkFactory?: any;\r\n\r\n    /**\r\n     * A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible.\r\n     */\r\n    readonly promiseLibrary?: any;\r\n\r\n    /**\r\n     * Specify a read concern for the collection. (only MongoDB 3.2 or higher supported).\r\n     */\r\n    readonly readConcern?: any;\r\n\r\n    /**\r\n     * Specify a maxStalenessSeconds value for secondary reads, minimum is 90 seconds\r\n     */\r\n    readonly maxStalenessSeconds?: number;\r\n\r\n    /**\r\n     * Specify the log level used by the driver logger (error/warn/info/debug).\r\n     */\r\n    readonly loggerLevel?: \"error\"|\"warn\"|\"info\"|\"debug\";\r\n\r\n    /**\r\n     * Sets the authentication mechanism that MongoDB will use to authenticate the connection\r\n     */\r\n    readonly authMechanism?: string;\r\n}"],"sourceRoot":"../.."}