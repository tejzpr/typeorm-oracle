{"version":3,"sources":["../../src/logger/Logger.ts"],"names":[],"mappings":"","file":"Logger.js","sourcesContent":["import {QueryRunner} from \"../query-runner/QueryRunner\";\r\n\r\n/**\r\n * Performs logging of the events in TypeORM.\r\n */\r\nexport interface Logger {\r\n\r\n    /**\r\n     * Logs query and parameters used in it.\r\n     */\r\n    logQuery(query: string, parameters?: any[], queryRunner?: QueryRunner): any;\r\n\r\n    /**\r\n     * Logs query that is failed.\r\n     */\r\n    logQueryError(error: string, query: string, parameters?: any[], queryRunner?: QueryRunner): any;\r\n\r\n    /**\r\n     * Logs query that is slow.\r\n     */\r\n    logQuerySlow(time: number, query: string, parameters?: any[], queryRunner?: QueryRunner): any;\r\n\r\n    /**\r\n     * Logs events from the schema build process.\r\n     */\r\n    logSchemaBuild(message: string, queryRunner?: QueryRunner): any;\r\n\r\n    /**\r\n     * Logs events from the migrations run process.\r\n     */\r\n    logMigration(message: string, queryRunner?: QueryRunner): any;\r\n\r\n    /**\r\n     * Perform logging using given logger, or by default to the console.\r\n     * Log has its own level and message.\r\n     */\r\n    log(level: \"log\"|\"info\"|\"warn\", message: any, queryRunner?: QueryRunner): any;\r\n\r\n}"],"sourceRoot":".."}