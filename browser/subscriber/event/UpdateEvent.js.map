{"version":3,"sources":["../browser/src/subscriber/event/UpdateEvent.ts"],"names":[],"mappings":"","file":"UpdateEvent.js","sourcesContent":["import {ColumnMetadata} from \"../../metadata/ColumnMetadata\";\r\nimport {RelationMetadata} from \"../../metadata/RelationMetadata\";\r\nimport {EntityManager} from \"../../entity-manager/EntityManager\";\r\nimport {QueryRunner} from \"../../query-runner/QueryRunner\";\r\nimport {Connection} from \"../../connection/Connection\";\r\n\r\n/**\r\n * UpdateEvent is an object that broadcaster sends to the entity subscriber when entity is being updated in the database.\r\n */\r\nexport interface UpdateEvent<Entity> {\r\n\r\n    /**\r\n     * Connection used in the event.\r\n     */\r\n    connection: Connection;\r\n\r\n    /**\r\n     * QueryRunner used in the event transaction.\r\n     * All database operations in the subscribed event listener should be performed using this query runner instance.\r\n     */\r\n    queryRunner: QueryRunner;\r\n\r\n    /**\r\n     * EntityManager used in the event transaction.\r\n     * All database operations in the subscribed event listener should be performed using this entity manager instance.\r\n     */\r\n    manager: EntityManager;\r\n\r\n    /**\r\n     * Updating entity.\r\n     */\r\n    entity: Entity;\r\n\r\n    /**\r\n     * Updating entity in the database.\r\n     */\r\n    databaseEntity: Entity;\r\n\r\n    /**\r\n     * List of updated columns.\r\n     */\r\n    updatedColumns: ColumnMetadata[];\r\n\r\n    /**\r\n     * List of updated relations.\r\n     */\r\n    updatedRelations: RelationMetadata[];\r\n\r\n    // todo: send old and new update values\r\n    // todo: send updated relations?\r\n\r\n}"],"sourceRoot":"../.."}