{"version":3,"sources":["../browser/src/driver/mongodb/typings.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAC,MAAM,8BAA8B,CAAC","file":"typings.js","sourcesContent":["import {EventEmitter, Readable, Writable} from \"../../platform/PlatformTools\";\r\n\r\n/**\r\n * Creates a new MongoClient instance.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/MongoClient.html\r\n */\r\nexport declare class MongoClient {\r\n\r\n    constructor();\r\n\r\n    /**\r\n     * Connect to MongoDB using a url as documented at docs.mongodb.org/manual/reference/connection-string/\r\n     * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver.\r\n     *\r\n     * @param url The connection URI string.\r\n     * @param callback The command result callback.\r\n     */\r\n    static connect(url: string, callback: MongoCallback<Db>): void;\r\n\r\n    /**\r\n     * Connect to MongoDB using a url as documented at docs.mongodb.org/manual/reference/connection-string/\r\n     * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver.\r\n     *\r\n     * @param url The connection URI string.\r\n     * @param options Optional settings.\r\n     */\r\n    static connect(url: string, options?: MongoClientOptions): Promise<Db>;\r\n\r\n    /**\r\n     * Connect to MongoDB using a url as documented at docs.mongodb.org/manual/reference/connection-string/\r\n     * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver.\r\n     *\r\n     * @param url The connection URI string.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     */\r\n    static connect(url: string, options: MongoClientOptions, callback: MongoCallback<Db>): void;\r\n\r\n    /**\r\n     * Connect to MongoDB using a url as documented at docs.mongodb.org/manual/reference/connection-string/\r\n     * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver.\r\n     *\r\n     * @param url The connection URI string.\r\n     * @param callback The command result callback.\r\n     */\r\n    connect(url: string, callback: MongoCallback<Db>): void;\r\n\r\n    /**\r\n     * Connect to MongoDB using a url as documented at docs.mongodb.org/manual/reference/connection-string/\r\n     * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver.\r\n     *\r\n     * @param url The connection URI string.\r\n     * @param options Optional settings.\r\n     */\r\n    connect(url: string, options?: MongoClientOptions): Promise<Db>;\r\n\r\n    /**\r\n     * Connect to MongoDB using a url as documented at docs.mongodb.org/manual/reference/connection-string/\r\n     * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver.\r\n     *\r\n     * @param url The connection URI string.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     */\r\n    connect(url: string, options: MongoClientOptions, callback: MongoCallback<Db>): void;\r\n}\r\n\r\n/**\r\n * The callback format for results.\r\n */\r\nexport interface MongoCallback<T> {\r\n\r\n    /**\r\n     * @param error An error instance representing the error during the execution.\r\n     * @param result The result of execution.\r\n     */\r\n    (error: MongoError, result: T): void;\r\n}\r\n\r\n// http://mongodb.github.io/node-mongodb-native/2.1/api/MongoError.html\r\nexport declare class MongoError extends Error {\r\n    constructor(message: string);\r\n    static create(options: Object): MongoError;\r\n}\r\n\r\n/**\r\n * Options for MongoClient#connect method.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#.connect\r\n */\r\nexport interface MongoClientOptions {\r\n\r\n    /**\r\n     * The maximum size of the individual server pool.\r\n     */\r\n    poolSize?: number;\r\n\r\n    /**\r\n     * Enable SSL connection.\r\n     */\r\n    ssl?: boolean;\r\n\r\n    /**\r\n     * SSL Certificate store binary buffer.\r\n     */\r\n    sslCA?: Buffer;\r\n\r\n    /**\r\n     * Uri decode the user name and password for authentication.\r\n     */\r\n    uri_decode_auth?: boolean;\r\n\r\n    /**\r\n     * A hash of options to set on the db object, see Db constructor.\r\n     */\r\n    db?: DbCreateOptions;\r\n\r\n    /**\r\n     * A hash of options to set on the server objects, see Server constructor**.\r\n     */\r\n    server?: ServerOptions;\r\n\r\n    /**\r\n     * A hash of options to set on the replSet object, see ReplSet constructor**.\r\n     */\r\n    replSet?: ReplSetOptions;\r\n\r\n    /**\r\n     * A hash of options to set on the mongos object, see Mongos constructor**.\r\n     */\r\n    mongos?: MongosOptions;\r\n\r\n    /**\r\n     * A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible.\r\n     */\r\n    promiseLibrary?: Object;\r\n}\r\n\r\nexport interface CommandOptions {\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n\r\n    /**\r\n     * Number of milliseconds to wait before aborting the query.\r\n     */\r\n    maxTimeMS?: number;\r\n}\r\n\r\n/**\r\n * Options for Db class.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html\r\n */\r\nexport interface DbCreateOptions {\r\n\r\n    /**\r\n     * If the database authentication is dependent on another databaseName.\r\n     */\r\n    authSource?: string;\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * The current value of the parameter native_parser.\r\n     */\r\n    native_parser?: boolean;\r\n\r\n    /**\r\n     * Force server to assign _id values instead of driver.\r\n     */\r\n    forceServerObjectId?: boolean;\r\n\r\n    /**\r\n     * Serialize functions on any object.\r\n     */\r\n    serializeFunctions?: boolean;\r\n\r\n    /**\r\n     * Specify if the BSON serializer should ignore undefined fields.\r\n     */\r\n    ignoreUndefined?: boolean;\r\n\r\n    /**\r\n     * Return document results as raw BSON buffers.\r\n     */\r\n    raw?: boolean;\r\n\r\n    /**\r\n     * Promotes Long values to number if they fit inside the 53 bits resolution.\r\n     */\r\n    promoteLongs?: boolean;\r\n\r\n    /**\r\n     * Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited.\r\n     */\r\n    bufferMaxEntries?: number;\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n\r\n    /**\r\n     * A primary key factory object for generation of custom _id keys.\r\n     */\r\n    pkFactory?: Object;\r\n\r\n    /**\r\n     * A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible.\r\n     */\r\n    promiseLibrary?: Object;\r\n\r\n    /**\r\n     * Specify a read concern for the collection. (only MongoDB 3.2 or higher supported).\r\n     */\r\n    readConcern?: { level?: Object };\r\n}\r\n\r\n/**\r\n * Creates a new ReadPreference instance.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/ReadPreference.html\r\n */\r\nexport declare class ReadPreference {\r\n    constructor(mode: string, tags: Object);\r\n\r\n    /**\r\n     * The ReadPreference mode as listed above.\r\n     */\r\n    mode: string;\r\n\r\n    /**\r\n     * An object representing read preference tags.\r\n     */\r\n    tags: any;\r\n\r\n    /**\r\n     * Read from primary only. All operations produce an error (throw an exception where applicable) if primary is unavailable. Cannot be combined with tags (This is the default.).\r\n     */\r\n    static PRIMARY: string;\r\n\r\n    /**\r\n     * Read from primary if available, otherwise a secondary.\r\n     */\r\n    static PRIMARY_PREFERRED: string;\r\n\r\n    /**\r\n     * Read from secondary if available, otherwise error.\r\n     */\r\n    static SECONDARY: string;\r\n\r\n    /**\r\n     * Read from a secondary if available, otherwise read from the primary.\r\n     */\r\n    static SECONDARY_PREFERRED: string;\r\n\r\n    /**\r\n     * All modes read from among the nearest candidates, but unlike other modes, NEAREST will include both the primary and all secondaries in the random selection.\r\n     */\r\n    static NEAREST: string;\r\n\r\n    /**\r\n     * Validate if a mode is legal.\r\n     */\r\n    isValid(mode: string): boolean;\r\n\r\n    /**\r\n     * Validate if a mode is legal.\r\n     */\r\n    static isValid(mode: string): boolean;\r\n}\r\n\r\n/**\r\n * Creates a new Server instance.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Server.html\r\n */\r\nexport interface SocketOptions {\r\n\r\n    /**\r\n     * Reconnect on error.\r\n     */\r\n    autoReconnect?: boolean;\r\n\r\n    /**\r\n     * TCP Socket NoDelay option.\r\n     */\r\n    noDelay?: boolean;\r\n\r\n    /**\r\n     * TCP KeepAlive on the socket with a X ms delay before start.\r\n     */\r\n    keepAlive?: number;\r\n\r\n    /**\r\n     * TCP Connection timeout setting.\r\n     */\r\n    connectTimeoutMS?: number;\r\n\r\n    /**\r\n     * TCP Socket timeout setting.\r\n     */\r\n    socketTimeoutMS?: number;\r\n}\r\n\r\n/**\r\n * Creates a new Server instance.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Server.html\r\n */\r\nexport interface ServerOptions {\r\n\r\n    /**\r\n     * Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\r\n     */\r\n    poolSize?: number;\r\n\r\n    /**\r\n     * Use ssl connection (needs to have a mongod server with ssl support).\r\n     */\r\n    ssl?: boolean;\r\n\r\n    /**\r\n     * Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslValidate?: Object;\r\n\r\n    /**\r\n     * Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\r\n     */\r\n    checkServerIdentity?: boolean | Function;\r\n\r\n    /**\r\n     * Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslCA?: Array<Buffer | string>;\r\n\r\n    /**\r\n     * String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslCert?: Buffer | string;\r\n\r\n    /**\r\n     * String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslKey?: Buffer | string;\r\n\r\n    /**\r\n     * String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslPass?: Buffer | string;\r\n\r\n    /**\r\n     * Socket options.\r\n     */\r\n    socketOptions?: SocketOptions;\r\n\r\n    /**\r\n     * Server attempt to reconnect #times.\r\n     */\r\n    reconnectTries?: number;\r\n\r\n    /**\r\n     * Server will wait # milliseconds between retries.\r\n     */\r\n    reconnectInterval?: number;\r\n}\r\n\r\n/**\r\n * Creates a new ReplSet instance.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/ReplSet.html\r\n */\r\nexport interface ReplSetOptions {\r\n\r\n    /**\r\n     * Turn on high availability monitoring.\r\n     */\r\n    ha?: boolean;\r\n\r\n    /**\r\n     * Time between each replicaset status check.\r\n     */\r\n    haInterval?: number;\r\n\r\n    /**\r\n     * The name of the replicaset to connect to.\r\n     */\r\n    replicaSet?: string;\r\n\r\n    /**\r\n     * Sets the range of servers to pick when using NEAREST (lowest ping ms + the latency fence, ex: range of 1 to (1 + 15) ms).\r\n     */\r\n    secondaryAcceptableLatencyMS?: number;\r\n\r\n    /**\r\n     * Sets if the driver should connect even if no primary is available.\r\n     */\r\n    connectWithNoPrimary?: boolean;\r\n\r\n    /**\r\n     * Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\r\n     */\r\n    poolSize?: number;\r\n\r\n    /**\r\n     * Use ssl connection (needs to have a mongod server with ssl support).\r\n     */\r\n    ssl?: boolean;\r\n\r\n    /**\r\n     * Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslValidate?: Object;\r\n\r\n    /**\r\n     * Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\r\n     */\r\n    checkServerIdentity?: boolean | Function;\r\n\r\n    /**\r\n     * Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslCA?: Array<Buffer | string>;\r\n\r\n    /**\r\n     * String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslCert?: Buffer | string;\r\n\r\n    /**\r\n     * String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslKey?: Buffer | string;\r\n\r\n    /**\r\n     * String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslPass?: Buffer | string;\r\n\r\n    /**\r\n     * Socket options.\r\n     */\r\n    socketOptions?: SocketOptions;\r\n}\r\n\r\n/**\r\n * Creates a new Mongos instance.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Mongos.html\r\n */\r\nexport interface MongosOptions {\r\n\r\n    /**\r\n     * Turn on high availability monitoring.\r\n     */\r\n    ha?: boolean;\r\n\r\n    /**\r\n     * Time between each replicaset status check.\r\n     */\r\n    haInterval?: number;\r\n\r\n    /**\r\n     * Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\r\n     */\r\n    poolSize?: number;\r\n\r\n    /**\r\n     * Use ssl connection (needs to have a mongod server with ssl support).\r\n     */\r\n    ssl?: boolean;\r\n\r\n    /**\r\n     * Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslValidate?: Object;\r\n\r\n    /**\r\n     * Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\r\n     */\r\n    checkServerIdentity?: boolean | Function;\r\n\r\n    /**\r\n     * Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslCA?: Array<Buffer | string>;\r\n\r\n    /**\r\n     * String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslCert?: Buffer | string;\r\n\r\n    /**\r\n     * String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslKey?: Buffer | string;\r\n\r\n    /**\r\n     * String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher).\r\n     */\r\n    sslPass?: Buffer | string;\r\n\r\n    /**\r\n     * Socket options.\r\n     */\r\n    socketOptions?: SocketOptions;\r\n}\r\n\r\nexport interface DbOptions {\r\n\r\n    /**\r\n     * Do not make the db an event listener to the original connection.\r\n     */\r\n    noListener?: boolean;\r\n\r\n    /**\r\n     * Control if you want to return a cached instance or have a new one created.\r\n     */\r\n    returnNonCachedInstance?: boolean;\r\n}\r\n\r\nexport interface IndexInformationOptions {\r\n\r\n    /**\r\n     * Returns the full raw index information.\r\n     */\r\n    full?: boolean;\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY,\r\n     * ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY,\r\n     * ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n}\r\n\r\nexport interface ExecuteDbAdminCommandOptions {\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n\r\n    // maxTimeMS?: number;\r\n}\r\n\r\nexport interface ListCollectionsOptions {\r\n\r\n    /**\r\n     * The batchSize for the returned command cursor or if pre 2.8 the systems batch collection.\r\n     */\r\n    batchSize?: number;\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n}\r\n\r\n/**\r\n * Db.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html\r\n */\r\nexport declare class Db extends EventEmitter {\r\n\r\n    /**\r\n     *\r\n     * @param databaseName The name of the database this instance represents.\r\n     * @param serverConfig The server topology for the database.\r\n     * @param options Optional.\r\n     */\r\n    constructor(databaseName: string, serverConfig: Server | ReplSet | Mongos, options?: DbCreateOptions);\r\n\r\n    /**\r\n     * Get the current db topology.\r\n     */\r\n    serverConfig: Server | ReplSet | Mongos;\r\n\r\n    /**\r\n     * Current bufferMaxEntries value for the database.\r\n     */\r\n    bufferMaxEntries: number;\r\n\r\n    /**\r\n     * The name of the database this instance represents.\r\n     */\r\n    databaseName: string;\r\n\r\n    /**\r\n     * The options associated with the db instance.\r\n     */\r\n    options: any;\r\n\r\n    /**\r\n     * The current value of the parameter native_parser.\r\n     */\r\n    native_parser: boolean;\r\n\r\n    /**\r\n     * The current slaveOk value for the db instance.\r\n     */\r\n    slaveOk: boolean;\r\n\r\n    /**\r\n     * The current write concern values.\r\n     */\r\n    writeConcern: any;\r\n\r\n    /**\r\n     * Add a user to the database.\r\n     *\r\n     * @param username The username.\r\n     * @param password The password.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#addUser\r\n     */\r\n    addUser(username: string, password: string, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Add a user to the database.\r\n     *\r\n     * @param username The username.\r\n     * @param password The password.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#addUser\r\n     */\r\n    addUser(username: string, password: string, options?: DbAddUserOptions): Promise<any>;\r\n\r\n    /**\r\n     * Add a user to the database.\r\n     *\r\n     * @param username The username.\r\n     * @param password The password.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#addUser\r\n     */\r\n    addUser(username: string, password: string, options: DbAddUserOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Return the Admin db instance.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#admin\r\n     */\r\n    admin(): Admin;\r\n\r\n    /**\r\n     * Authenticate a user against the server.\r\n     *\r\n     * @param userName The username.\r\n     * @param password The password.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#authenticate\r\n     */\r\n    authenticate(userName: string, password: string, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Authenticate a user against the server.\r\n     *\r\n     * @param userName The username.\r\n     * @param password The password.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#authenticate\r\n     */\r\n    authenticate(userName: string, password: string, options?: { authMechanism: string }): Promise<any>;\r\n\r\n    /**\r\n     * Authenticate a user against the server.\r\n     *\r\n     * @param userName The username.\r\n     * @param password The password.\r\n     * @param password\r\n     * @param options\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#authenticate\r\n     */\r\n    authenticate(userName: string, password: string, options: { authMechanism: string }, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Close the db and its underlying connections.\r\n     *\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#close\r\n     */\r\n    close(callback: MongoCallback<void>): void;\r\n\r\n    /**\r\n     * Close the db and its underlying connections.\r\n     *\r\n     * @param forceClose Force close, emitting no events.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#close\r\n     */\r\n    close(forceClose?: boolean): Promise<void>;\r\n\r\n    /**\r\n     * Close the db and its underlying connections.\r\n     *\r\n     * @param forceClose Force close, emitting no events.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#close\r\n     */\r\n    close(forceClose: boolean, callback: MongoCallback<void>): void;\r\n\r\n    /**\r\n     * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you can\r\n     * can use it without a callback in the following way: var collection = db.collection('mycollection');\r\n     *\r\n     * @param name The collection name we wish to access.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#collection\r\n     */\r\n    collection(name: string): Collection;\r\n\r\n    /**\r\n     * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you can\r\n     * can use it without a callback in the following way: var collection = db.collection('mycollection');\r\n     *\r\n     * @param name The collection name we wish to access.\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#collection\r\n     */\r\n    collection(name: string, callback: MongoCallback<Collection>): Collection;\r\n\r\n    /**\r\n     * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you can\r\n     * can use it without a callback in the following way: var collection = db.collection('mycollection');\r\n     *\r\n     * @param name The collection name we wish to access.\r\n     * @param options Optional settings.\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#collection\r\n     */\r\n    collection(name: string, options: DbCollectionOptions, callback: MongoCallback<Collection>): Collection;\r\n\r\n    /**\r\n     * Fetch all collections for the current db.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#collections\r\n     */\r\n    collections(): Promise<Collection[]>;\r\n\r\n    /**\r\n     * Fetch all collections for the current db.\r\n     *\r\n     * @param callback The results callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#collections\r\n     */\r\n    collections(callback: MongoCallback<Collection[]>): void;\r\n\r\n    /**\r\n     * Execute a command.\r\n     *\r\n     * @param command The command hash.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#command\r\n     */\r\n    command(command: Object, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Execute a command.\r\n     *\r\n     * @param command The command hash.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#command\r\n     */\r\n    command(command: Object, options?: { readPreference: ReadPreference | string }): Promise<any>;\r\n\r\n    /**\r\n     * Execute a command.\r\n     *\r\n     * @param command The command hash.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#command\r\n     */\r\n    command(command: Object, options: { readPreference: ReadPreference | string }, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Create a new collection on a server with the specified options. Use this to create capped collections.\r\n     *\r\n     * @param name The collection name we wish to access.\r\n     * @param callback The results callback\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#createCollection\r\n     */\r\n    createCollection(name: string, callback: MongoCallback<Collection>): void;\r\n\r\n    /**\r\n     * Create a new collection on a server with the specified options. Use this to create capped collections.\r\n     *\r\n     * @param name The collection name we wish to access.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#createCollection\r\n     */\r\n    createCollection(name: string, options?: CollectionCreateOptions): Promise<Collection>;\r\n\r\n    /**\r\n     * Create a new collection on a server with the specified options. Use this to create capped collections.\r\n     *\r\n     * @param name The collection name we wish to access.\r\n     * @param options Optional settings.\r\n     * @param callback The results callback\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#createCollection\r\n     */\r\n    createCollection(name: string, options: CollectionCreateOptions, callback: MongoCallback<Collection>): void;\r\n\r\n    /**\r\n     * Creates an index on the db and collection collection.\r\n     *\r\n     * @param name Name of the collection to create the index on.\r\n     * @param fieldOrSpec Defines the index.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#createIndex\r\n     */\r\n    createIndex(name: string, fieldOrSpec: string | Object, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Creates an index on the db and collection collection.\r\n     *\r\n     * @param name Name of the collection to create the index on.\r\n     * @param fieldOrSpec Defines the index.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#createIndex\r\n     */\r\n    createIndex(name: string, fieldOrSpec: string | Object, options?: MongodbIndexOptions): Promise<any>;\r\n\r\n    /**\r\n     * Creates an index on the db and collection collection.\r\n     *\r\n     * @param name Name of the collection to create the index on.\r\n     * @param fieldOrSpec Defines the index.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#createIndex\r\n     */\r\n    createIndex(name: string, fieldOrSpec: string | Object, options: MongodbIndexOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Create a new Db instance sharing the current socket connections. Be aware that the new db instances are\r\n     * related in a parent-child relationship to the original instance so that events are correctly emitted on child\r\n     * db instances. Child db instances are cached so performing db('db1') twice will return the same instance.\r\n     * You can control these behaviors with the options noListener and returnNonCachedInstance.\r\n     *\r\n     * @param dbName The name of the database we want to use.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#db\r\n     */\r\n    db(dbName: string): Db;\r\n\r\n    /**\r\n     * Create a new Db instance sharing the current socket connections. Be aware that the new db instances are\r\n     * related in a parent-child relationship to the original instance so that events are correctly emitted on child\r\n     * db instances. Child db instances are cached so performing db('db1') twice will return the same instance.\r\n     * You can control these behaviors with the options noListener and returnNonCachedInstance.\r\n     *\r\n     * @param dbName The name of the database we want to use.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#db\r\n     */\r\n    db(dbName: string, options: DbOptions): Db;\r\n\r\n    /**\r\n     * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\r\n     *\r\n     * @param name Name of collection to drop.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#dropCollection\r\n     */\r\n    dropCollection(name: string): Promise<boolean>;\r\n\r\n    /**\r\n     * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\r\n     *\r\n     * @param name Name of collection to drop.\r\n     * @param callback The results callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#dropCollection\r\n     */\r\n    dropCollection(name: string, callback: MongoCallback<boolean>): void;\r\n\r\n    /**\r\n     * Drop a database, removing it permanently from the server.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#dropDatabase\r\n     */\r\n    dropDatabase(): Promise<any>;\r\n\r\n    /**\r\n     * Drop a database, removing it permanently from the server.\r\n     *\r\n     * @param callback The results callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#dropDatabase\r\n     */\r\n    dropDatabase(callback: MongoCallback<any>): void;\r\n\r\n    // deprecated http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#ensureIndex\r\n    // ensureIndex(collectionName: any, fieldOrSpec: any, options: IndexOptions, callback: Function): void;\r\n    // deprecated http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#eval\r\n    // eval(code: any, parameters: any[], options?: any, callback?: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Runs a command on the database as admin.\r\n     *\r\n     * @param command The command hash.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#executeDbAdminCommand\r\n     */\r\n    executeDbAdminCommand(command: Object, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Runs a command on the database as admin.\r\n     *\r\n     * @param command The command hash.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#executeDbAdminCommand\r\n     */\r\n    executeDbAdminCommand(command: Object, options?: ExecuteDbAdminCommandOptions): Promise<any>;\r\n\r\n    /**\r\n     * Runs a command on the database as admin.\r\n     *\r\n     * @param command The command hash.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#executeDbAdminCommand\r\n     */\r\n    executeDbAdminCommand(command: Object, options: ExecuteDbAdminCommandOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Retrieves this collections index info.\r\n     *\r\n     * @param name The name of the collection.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#indexInformation\r\n     */\r\n    indexInformation(name: string, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Retrieves this collections index info.\r\n     *\r\n     * @param name The name of the collection.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#indexInformation\r\n     */\r\n    indexInformation(name: string, options?: IndexInformationOptions): Promise<any>;\r\n\r\n    /**\r\n     * Retrieves this collections index info.\r\n     *\r\n     * @param name The name of the collection.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#indexInformation\r\n     */\r\n    indexInformation(name: string, options: IndexInformationOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Get the list of all collection information for the specified db.\r\n     *\r\n     * @param filter Query to filter collections by.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#listCollections\r\n     */\r\n    listCollections(filter: Object, options?: ListCollectionsOptions): CommandCursor;\r\n\r\n    /**\r\n     * Logout user from server, fire off on all connections and remove all auth info.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#logout\r\n     */\r\n    logout(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Logout user from server, fire off on all connections and remove all auth info.\r\n     *\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#logout\r\n     */\r\n    logout(options?: { dbName?: string }): Promise<any>;\r\n\r\n    /**\r\n     * Logout user from server, fire off on all connections and remove all auth info.\r\n     *\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#logout\r\n     */\r\n    logout(options: { dbName?: string }, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Open the database.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#open\r\n     */\r\n    open(): Promise<Db>;\r\n\r\n    /**\r\n     * Open the database\r\n     *\r\n     * @param callback Callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#open\r\n     */\r\n    open(callback: MongoCallback<Db>): void;\r\n\r\n\r\n    /**\r\n     *\r\n     * @param username\r\n     * @param callback\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#removeUser\r\n     */\r\n    removeUser(username: string, callback: MongoCallback<any>): void;\r\n    removeUser(username: string, options?: { w?: number | string, wtimeout?: number, j?: boolean }): Promise<any>;\r\n    removeUser(username: string, options: { w?: number | string, wtimeout?: number, j?: boolean }, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Rename a collection.\r\n     *\r\n     * @param fromCollection Name of current collection to rename.\r\n     * @param toCollection New name of of the collection.\r\n     * @param callback The results callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#renameCollection\r\n     */\r\n    renameCollection(fromCollection: string, toCollection: string, callback: MongoCallback<Collection>): void;\r\n\r\n    /**\r\n     * Rename a collection.\r\n     *\r\n     * @param fromCollection Name of current collection to rename.\r\n     * @param toCollection New name of of the collection.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#renameCollection\r\n     */\r\n    renameCollection(fromCollection: string, toCollection: string, options?: { dropTarget?: boolean }): Promise<Collection>;\r\n\r\n    /**\r\n     * Rename a collection.\r\n     *\r\n     * @param fromCollection Name of current collection to rename.\r\n     * @param toCollection New name of of the collection.\r\n     * @param options Optional settings.\r\n     * @param callback The results callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#renameCollection\r\n     */\r\n    renameCollection(fromCollection: string, toCollection: string, options: { dropTarget?: boolean }, callback: MongoCallback<Collection>): void;\r\n\r\n    /**\r\n     * Get all the db statistics.\r\n     *\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#stats\r\n     */\r\n    stats(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Get all the db statistics.\r\n     *\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#stats\r\n     */\r\n    stats(options?: { scale?: number }): Promise<any>;\r\n\r\n    /**\r\n     * Get all the db statistics.\r\n     *\r\n     * @param options Optional settings.\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#stats\r\n     */\r\n    stats(options: { scale?: number }, callback: MongoCallback<any>): void;\r\n}\r\n\r\n/**\r\n * Server.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Server.html\r\n */\r\nexport declare class Server extends EventEmitter {\r\n\r\n    /**\r\n     *\r\n     * @param host The host for the server, can be either an IP4, IP6 or domain socket style host.\r\n     * @param port The server port if IP4.\r\n     * @param options Optional.\r\n     */\r\n    constructor(host: string, port: number, options?: ServerOptions);\r\n\r\n    /**\r\n     * All raw connections.\r\n     */\r\n    connections(): Array<any>;\r\n}\r\n\r\n/**\r\n * ReplSet.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/ReplSet.html\r\n */\r\nexport declare class ReplSet extends EventEmitter {\r\n\r\n    /**\r\n     *\r\n     * @param servers A seedlist of servers participating in the replicaset.\r\n     * @param options Optional.\r\n     */\r\n    constructor(servers: Array<Server>, options?: ReplSetOptions);\r\n\r\n    /**\r\n     * All raw connections\r\n     */\r\n    connections(): Array<any>;\r\n}\r\n\r\n/**\r\n * Mongos.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Mongos.html\r\n */\r\nexport declare class Mongos extends EventEmitter {\r\n\r\n    /**\r\n     *\r\n     * @param servers A seedlist of servers participating in the replicaset.\r\n     * @param options Optional.\r\n     */\r\n    constructor(servers: Array<Server>, options?: MongosOptions);\r\n\r\n    /**\r\n     * All raw connections\r\n     */\r\n    connections(): Array<any>;\r\n}\r\n\r\n/**\r\n * Creates a new Db instance.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#addUser\r\n */\r\nexport interface DbAddUserOptions {\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: string | number;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * Custom data associated with the user (only Mongodb 2.6 or higher).\r\n     */\r\n    customData?: Object;\r\n\r\n    /**\r\n     * Roles associated with the created user (only Mongodb 2.6 or higher).\r\n     */\r\n    roles?: Object[];\r\n}\r\n\r\n/**\r\n * Creates a new Db instance.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#createCollection\r\n */\r\nexport interface CollectionCreateOptions {\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * Return document results as raw BSON buffers.\r\n     */\r\n    raw?: boolean;\r\n\r\n    /**\r\n     * A primary key factory object for generation of custom _id keys.\r\n     */\r\n    pkFactory?: Object;\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n\r\n    /**\r\n     * Serialize functions on any object.\r\n     */\r\n    serializeFunctions?: boolean;\r\n\r\n    /**\r\n     * Returns an error if the collection does not exist.\r\n     */\r\n    strict?: boolean;\r\n\r\n    /**\r\n     * Create a capped collection.\r\n     */\r\n    capped?: boolean;\r\n\r\n    /**\r\n     * The size of the capped collection in bytes.\r\n     */\r\n    size?: number;\r\n\r\n    /**\r\n     * The maximum number of documents in the capped collection.\r\n     */\r\n    max?: number;\r\n\r\n    /**\r\n     * Create an index on the _id field of the document, True by default on MongoDB 2.2 or higher off for version < 2.2.\r\n     */\r\n    autoIndexId?: boolean;\r\n}\r\n\r\n/**\r\n * Creates a new Db instance.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#collection\r\n */\r\nexport interface DbCollectionOptions {\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * Return document results as raw BSON buffers.\r\n     */\r\n    raw?: boolean;\r\n\r\n    /**\r\n     * A primary key factory object for generation of custom _id keys.\r\n     */\r\n    pkFactory?: Object;\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n\r\n    /**\r\n     * Serialize functions on any object.\r\n     */\r\n    serializeFunctions?: boolean;\r\n\r\n    /**\r\n     * Returns an error if the collection does not exist.\r\n     */\r\n    strict?: boolean;\r\n\r\n    /**\r\n     * Specify a read concern for the collection. (only MongoDB 3.2 or higher supported).\r\n     */\r\n    readConcern?: { level: Object };\r\n}\r\n\r\n/**\r\n * Creates an index on the db and collection collection.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Db.html#createIndex\r\n */\r\nexport interface MongodbIndexOptions {\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * Creates an unique index.\r\n     */\r\n    unique?: boolean;\r\n\r\n    /**\r\n     * Creates a sparse index.\r\n     */\r\n    sparse?: boolean;\r\n\r\n    /**\r\n     * Creates the index in the background, yielding whenever possible.\r\n     */\r\n    background?: boolean;\r\n\r\n    /**\r\n     * A unique index cannot be created on a key that has pre-existing duplicate values.\r\n     * If you would like to create the index anyway, keeping the first document\r\n     * the database indexes and deleting all subsequent documents that have duplicate value.\r\n     */\r\n    dropDups?: boolean;\r\n\r\n    /**\r\n     * For geospatial indexes set the lower bound for the co-ordinates.\r\n     */\r\n    min?: number;\r\n\r\n    /**\r\n     * For geospatial indexes set the high bound for the co-ordinates.\r\n     */\r\n    max?: number;\r\n\r\n    /**\r\n     * Specify the format version of the indexes.\r\n     */\r\n    v?: number;\r\n\r\n    /**\r\n     * Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher).\r\n     */\r\n    expireAfterSeconds?: number;\r\n\r\n    /**\r\n     * Override the autogenerated index name (useful if the resulting name is larger than 128 bytes).\r\n     */\r\n    name?: string;\r\n\r\n}\r\n\r\n/**\r\n * Admin.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html\r\n */\r\nexport interface Admin {\r\n\r\n    /**\r\n     * Add a user to the database.\r\n     *\r\n     * @param username The username.\r\n     * @param password The password.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#addUser\r\n     */\r\n    addUser(username: string, password: string, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Add a user to the database.\r\n     *\r\n     * @param username The username.\r\n     * @param password The password.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#addUser\r\n     */\r\n    addUser(username: string, password: string, options?: AddUserOptions): Promise<any>;\r\n\r\n    /**\r\n     * Add a user to the database.\r\n     *\r\n     * @param username The username.\r\n     * @param password The password.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#addUser\r\n     */\r\n    addUser(username: string, password: string, options: AddUserOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Authenticate a user against the server.\r\n     *\r\n     * @param username The username.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#authenticate\r\n     */\r\n    authenticate(username: string, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Authenticate a user against the server.\r\n     *\r\n     * @param username The username.\r\n     * @param password The password.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#authenticate\r\n     */\r\n    authenticate(username: string, password?: string): Promise<any>;\r\n\r\n    /**\r\n     * Authenticate a user against the server.\r\n     *\r\n     * @param username The username.\r\n     * @param password The password.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#authenticate\r\n     */\r\n    authenticate(username: string, password: string, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Retrieve the server information for the current instance of the db client\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#buildInfo\r\n     */\r\n    buildInfo(): Promise<any>;\r\n\r\n    /**\r\n     * Retrieve the server information for the current instance of the db client\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#buildInfo\r\n     */\r\n    buildInfo(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Execute a command.\r\n     *\r\n     * @param command The command hash.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#command\r\n     */\r\n    command(command: Object, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Execute a command.\r\n     *\r\n     * @param command The command hash.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#command\r\n     */\r\n    command(command: Object, options?: CommandOptions): Promise<any>;\r\n\r\n    /**\r\n     * Execute a command.\r\n     *\r\n     * @param command The command hash.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#command\r\n     */\r\n    command(command: Object, options: CommandOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * List the available databases.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#listDatabases\r\n     */\r\n    listDatabases(): Promise<any>;\r\n\r\n    /**\r\n     * List the available databases.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#listDatabases\r\n     */\r\n    listDatabases(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Logout user from server, fire off on all connections and remove all auth info.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#logout.\r\n     */\r\n    logout(): Promise<any>;\r\n\r\n    /**\r\n     * Logout user from server, fire off on all connections and remove all auth info.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#logout.\r\n     */\r\n    logout(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Ping the MongoDB server and retrieve results.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#ping\r\n     */\r\n    ping(): Promise<any>;\r\n\r\n    /**\r\n     * Ping the MongoDB server and retrieve results.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#ping\r\n     */\r\n    ping(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Retrive the current profiling information for MongoDB.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#profilingInfo\r\n     */\r\n    profilingInfo(): Promise<any>;\r\n\r\n    /**\r\n     * Retrive the current profiling information for MongoDB.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#profilingInfo\r\n     */\r\n    profilingInfo(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Retrieve the current profiling Level for MongoDB.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#profilingLevel\r\n     */\r\n    profilingLevel(): Promise<any>;\r\n\r\n    /**\r\n     * Retrieve the current profiling Level for MongoDB.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#profilingLevel\r\n     */\r\n    profilingLevel(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Remove a user from a database.\r\n     *\r\n     * @param username The username.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#removeUser\r\n     */\r\n    removeUser(username: string, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Remove a user from a database.\r\n     *\r\n     * @param username The username.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#removeUser\r\n     */\r\n    removeUser(username: string, options?: FSyncOptions): Promise<any>;\r\n\r\n    /**\r\n     * Remove a user from a database.\r\n     *\r\n     * @param username The username.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#removeUser\r\n     */\r\n    removeUser(username: string, options: FSyncOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Get ReplicaSet status.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#replSetGetStatus\r\n     */\r\n    replSetGetStatus(): Promise<any>;\r\n\r\n    /**\r\n     * Get ReplicaSet status.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#replSetGetStatus\r\n     */\r\n    replSetGetStatus(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Retrieve the server information for the current\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#serverInfo\r\n     */\r\n    serverInfo(): Promise<any>;\r\n\r\n    /**\r\n     * instance of the db client\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#serverInfo\r\n     * @param callback The command result callback.\r\n     */\r\n    serverInfo(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Retrieve this db's server status.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#serverStatus\r\n     */\r\n    serverStatus(): Promise<any>;\r\n\r\n    /**\r\n     * Retrieve this db's server status.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#serverStatus\r\n     */\r\n    serverStatus(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Set the current profiling level of MongoDB.\r\n     *\r\n     * @param level The new profiling level (off, slow_only, all).\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#setProfilingLevel\r\n     */\r\n    setProfilingLevel(level: string): Promise<any>;\r\n\r\n    /**\r\n     * Set the current profiling level of MongoDB.\r\n     *\r\n     * @param level The new profiling level (off, slow_only, all).\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#setProfilingLevel\r\n     */\r\n    setProfilingLevel(level: string, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Validate an existing collection\r\n     *\r\n     * @param collectionNme The name of the collection to validate.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#validateCollection\r\n     */\r\n    validateCollection(collectionNme: string, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Validate an existing collection\r\n     *\r\n     * @param collectionNme The name of the collection to validate.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#validateCollection\r\n     */\r\n    validateCollection(collectionNme: string, options?: Object): Promise<any>;\r\n\r\n    /**\r\n     * Validate an existing collection\r\n     *\r\n     * @param collectionNme The name of the collection to validate.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#validateCollection\r\n     */\r\n    validateCollection(collectionNme: string, options: Object, callback: MongoCallback<any>): void;\r\n}\r\n\r\n/**\r\n * Add a user to the database.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#addUser\r\n */\r\nexport interface AddUserOptions {\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * Specify a file sync write concern.\r\n     */\r\n    fsync: boolean;\r\n\r\n    /**\r\n     * Custom data associated with the user (only Mongodb 2.6 or higher).\r\n     */\r\n    customData?: Object;\r\n\r\n    /**\r\n     * Roles associated with the created user (only Mongodb 2.6 or higher).\r\n     */\r\n    roles?: Object[];\r\n}\r\nexport interface ListIndexesOptions {\r\n\r\n    /**\r\n     * The batchSize for the returned command cursor or if pre 2.8 the systems batch collection.\r\n     */\r\n    batchSize?: number;\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n}\r\n\r\nexport interface GroupOptions {\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n}\r\n\r\n/**\r\n * Remove a user from a database.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Admin.html#removeUser\r\n */\r\nexport interface FSyncOptions {\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * Specify a file sync write concern.\r\n     */\r\n    fsync?: boolean;\r\n}\r\n\r\nexport interface FindOneAndDeleteOptions {\r\n\r\n    /**\r\n     * Limits the fields to return for all matching documents.\r\n     */\r\n    projection?: Object;\r\n\r\n    /**\r\n     * Determines which document the operation modifies if the query selects multiple documents.\r\n     */\r\n    sort?: Object;\r\n\r\n    /**\r\n     * The maximum amount of time to allow the query to run.\r\n     */\r\n    maxTimeMS?: number;\r\n}\r\n\r\n/**\r\n * Create a new ObjectID instance.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/ObjectID.html\r\n */\r\nexport declare class ObjectID {\r\n    constructor(s?: string | number);\r\n\r\n    /**\r\n     * The generation time of this ObjectId instance.\r\n     */\r\n    generationTime: number;\r\n\r\n    /**\r\n     * Creates an ObjectID from a hex string representation of an ObjectID.\r\n     */\r\n    static createFromHexString(hexString: string): ObjectID;\r\n\r\n    /**\r\n     * Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\r\n     */\r\n    static createFromTime(time: number): ObjectID;\r\n\r\n    /**\r\n     * Checks if a value is a valid bson ObjectId.\r\n     */\r\n    static isValid(id: any): boolean;\r\n\r\n    /**\r\n     * Compares the equality of this ObjectID with otherID.\r\n     */\r\n    equals(otherID: ObjectID): boolean;\r\n\r\n    /**\r\n     * Generate a 12 byte id buffer used in ObjectID's.\r\n     */\r\n    generate(time?: number): string;\r\n\r\n    /**\r\n     * Returns the generation date (accurate up to the second) that this ID was generated.\r\n     *\r\n     */\r\n    getTimestamp(): Date;\r\n\r\n    /**\r\n     * Return the ObjectID id as a 24 byte hex string representation.\r\n     */\r\n    toHexString(): string;\r\n\r\n    /**\r\n     * Get the timestamp and validate correctness.\r\n     */\r\n    toString(): string;\r\n}\r\n\r\n/**\r\n * A class representation of the BSON Binary type.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Binary.html\r\n */\r\nexport declare class Binary {\r\n\r\n    /**\r\n     * @param buffer A buffer object containing the binary data.\r\n     * @param subType The option binary type.\r\n     */\r\n    constructor(buffer: Buffer, subType?: number);\r\n\r\n    /**\r\n     * Byte Array BSON type.\r\n     */\r\n    static SUBTYPE_BYTE_ARRAY: number;\r\n\r\n    /**\r\n     * Default BSON type.\r\n     */\r\n    static SUBTYPE_DEFAULT: number;\r\n\r\n    /**\r\n     * Function BSON type.\r\n     */\r\n    static SUBTYPE_FUNCTION: number;\r\n\r\n    /**\r\n     * MD5 BSON type.\r\n     */\r\n    static SUBTYPE_MD5: number;\r\n\r\n    /**\r\n     * User BSON type.\r\n     */\r\n    static SUBTYPE_USER_DEFINED: number;\r\n\r\n    /**\r\n     * UUID BSON type.\r\n     */\r\n    static SUBTYPE_UUID: number;\r\n\r\n    /**\r\n     * OLD UUID BSON type\r\n     */\r\n    static SUBTYPE_UUID_OLD: number;\r\n\r\n    /**\r\n     * The length of the binary.\r\n     */\r\n    length(): number;\r\n\r\n    /**\r\n     * Updates this binary with byte_value.\r\n     *\r\n     * @param byte_value A single byte we wish to write.\r\n     */\r\n    put(byte_value: number | string): void;\r\n\r\n    /**\r\n     * Reads length bytes starting at position.\r\n     *\r\n     * @param position Read from the given position in the Binary.\r\n     * @param length The number of bytes to read.\r\n     */\r\n    read(position: number, length: number): Buffer;\r\n\r\n    /**\r\n     * Returns the value of this binary as a string.\r\n     */\r\n    value(): string;\r\n\r\n    /**\r\n     * Writes a buffer or string to the binary\r\n     *\r\n     * @param buffer A string or buffer to be written to the Binary BSON object.\r\n     * @param offset Specify the binary of where to write the content.\r\n     */\r\n    write(buffer: Buffer | string, offset: number): void;\r\n}\r\n/**\r\n * A class representation of the BSON Double type.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Double.html\r\n */\r\nexport declare class Double {\r\n\r\n    /**\r\n     * @param value The number we want to represent as a double.\r\n     */\r\n    constructor(value: number);\r\n\r\n    /**\r\n     * Access the number value.\r\n     */\r\n    valueOf(): number;\r\n}\r\n\r\n/**\r\n * Long\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Long.html\r\n */\r\nexport declare class Long {\r\n\r\n    /**\r\n     * @param low The low (signed) 32 bits of the Long.\r\n     * @param high The high (signed) 32 bits of the Long.\r\n     */\r\n    constructor(low: number, high: number);\r\n\r\n    static MAX_VALUE: Long;\r\n    static MIN_VALUE: Long;\r\n    static NEG_ONE: Long;\r\n    static ONE: Long;\r\n    static ZERO: Long;\r\n\r\n    /**\r\n     * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits.\r\n     * Each is assumed to use 32 bits.\r\n     *\r\n     * @param lowBits The low 32-bits.\r\n     * @param highBits The high 32-bits.\r\n     */\r\n    static fromBits(lowBits: number, highBits: number): Long;\r\n\r\n    /**\r\n     * Returns a Long representing the given (32-bit) integer value.\r\n     *\r\n     * @param value The 32-bit integer in question.\r\n     */\r\n    static fromInt(value: number): Long;\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     *\r\n     * @param value The number in question.\r\n     */\r\n    static fromNumber(value: number): Long;\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the given radix.\r\n     *\r\n     * @param str The textual representation of the Long.\r\n     * @param radix The radix in which the text is written.\r\n     */\r\n    static fromString(str: string, radix?: number): Long;\r\n\r\n    /**\r\n     * Returns the sum of this and the given Long.\r\n     *\r\n     * @param other Long to add to this one.\r\n     */\r\n    add(other: Long): Long;\r\n\r\n    /**\r\n     * Returns the bitwise-AND of this Long and the given one.\r\n     *\r\n     * @param other The Long with which to AND.\r\n     */\r\n    and(other: Long): Long;\r\n\r\n    /**\r\n     * Compares this Long with the given one.\r\n     *\r\n     * @param other Long to compare against.\r\n     */\r\n    compare(other: Long): number;\r\n\r\n    /**\r\n     * Returns this Long divided by the given one.\r\n     *\r\n     * @param other Long by which to divide.\r\n     */\r\n    div(other: Long): Long;\r\n\r\n    /**\r\n     * Return whether this Long equals the other.\r\n     *\r\n     * @param other Long to compare against.\r\n     */\r\n    equals(other: Long): boolean;\r\n\r\n    /**\r\n     * Return the high 32-bits value.\r\n     */\r\n    getHighBits(): number;\r\n\r\n    /**\r\n     * Return the low 32-bits value.\r\n     */\r\n    getLowBits(): number;\r\n\r\n    /**\r\n     * Return the low unsigned 32-bits value.\r\n     */\r\n    getLowBitsUnsigned(): number;\r\n\r\n    /**\r\n     * Returns the number of bits needed to represent the absolute value of this Long.\r\n     */\r\n    getNumBitsAbs(): number;\r\n\r\n    /**\r\n     * Return whether this Long is greater than the other.\r\n     *\r\n     * @param other Long to compare against.\r\n     */\r\n    greaterThan(other: Long): number;\r\n\r\n    /**\r\n     * Return whether this Long is greater than or equal to the other.\r\n     *\r\n     * @param other Long to compare against.\r\n     */\r\n    greaterThanOrEqual(other: Long): number;\r\n\r\n    /**\r\n     * Return whether this value is negative.\r\n     */\r\n    isNegative(): boolean;\r\n\r\n    /**\r\n     * Return whether this value is odd.\r\n     */\r\n    isOdd(): boolean;\r\n\r\n    /**\r\n     * Return whether this value is zero.\r\n     */\r\n    isZero(): boolean;\r\n\r\n    /**\r\n     * Return whether this Long is less than the other.\r\n     *\r\n     * @param other Long to compare against.\r\n     */\r\n    lessThan(other: Long): boolean;\r\n\r\n    /**\r\n     * Return whether this Long is less than or equal to the other.\r\n     *\r\n     * @param other Long to compare against.\r\n     */\r\n    lessThanOrEqual(other: Long): boolean;\r\n\r\n    /**\r\n     * Returns this Long modulo the given one.\r\n     *\r\n     * @param other Long by which to mod.\r\n     */\r\n    modulo(other: Long): Long;\r\n\r\n    /**\r\n     * Returns the product of this and the given Long.\r\n     *\r\n     * @param other Long to multiply with this.\r\n     */\r\n    multiply(other: Long): Long;\r\n\r\n    /**\r\n     * The negation of this value.\r\n     */\r\n    negate(): Long;\r\n\r\n    /**\r\n     * The bitwise-NOT of this value.\r\n     */\r\n    not(): Long;\r\n\r\n    /**\r\n     * Return whether this Long does not equal the other.\r\n     *\r\n     * @param other Long to compare against.\r\n     */\r\n    notEquals(other: Long): boolean;\r\n\r\n    /**\r\n     * Returns the bitwise-OR of this Long and the given one.\r\n     *\r\n     * @param other The Long with which to OR.\r\n     */\r\n    or(other: Long): Long;\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     *\r\n     * @param other The number of bits by which to shift.\r\n     */\r\n    shiftLeft(other: number): Long;\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the right by the given amount.\r\n     *\r\n     * @param other The number of bits by which to shift.\r\n     */\r\n    shiftRight(other: number): Long;\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\r\n     *\r\n     * @param other The number of bits by which to shift.\r\n     */\r\n    shiftRightUnsigned(other: number): Long;\r\n\r\n    /**\r\n     * Returns the difference of this and the given Long.\r\n     *\r\n     * @param other Long to subtract from this.\r\n     */\r\n    subtract(other: Long): Long;\r\n\r\n    /**\r\n     * Return the int value.\r\n     */\r\n    toInt(): number;\r\n\r\n    /**\r\n     * Return the JSON value.\r\n     */\r\n    toJSON(): string;\r\n\r\n    /**\r\n     * Return the Number value.\r\n     */\r\n    toNumber(): number;\r\n\r\n    /**\r\n     * Return the String value.\r\n     *\r\n     * @param opt_radix The radix in which the text should be written.\r\n     */\r\n    toString(opt_radix?: number): string;\r\n\r\n    /**\r\n     * Returns the bitwise-XOR of this Long and the given one.\r\n     *\r\n     * @param other The Long with which to XOR.\r\n     */\r\n    xor(other: Long): Long;\r\n}\r\n\r\n/**\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/MaxKey.html\r\n */\r\nexport declare class MaxKey { }\r\n\r\n/**\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/MinKey.html\r\n */\r\nexport declare class MinKey { }\r\n\r\n/**\r\n * Timestamp.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Timestamp.html\r\n */\r\nexport declare class Timestamp {\r\n\r\n    /**\r\n     * @param low The low (signed) 32 bits of the Timestamp.\r\n     * @param high The high (signed) 32 bits of the Timestamp.\r\n     */\r\n    constructor(low: number, high: number);\r\n\r\n    static MAX_VALUE: Timestamp;\r\n    static MIN_VALUE: Timestamp;\r\n    static NEG_ONE: Timestamp;\r\n    static ONE: Timestamp;\r\n    static ZERO: Timestamp;\r\n\r\n    /**\r\n     * Returns a Timestamp representing the 64-bit integer that comes by concatenating the\r\n     * given high and low bits. Each is assumed to use 32 bits..\r\n     *\r\n     * @param lowBits The low 32-bits.\r\n     * @param highBits The high 32-bits.\r\n     */\r\n    static fromBits(lowBits: number, highBits: number): Timestamp;\r\n\r\n    /**\r\n     * Returns a Timestamp representing the given (32-bit) integer value.\r\n     *\r\n     * @param value The 32-bit integer in question.\r\n     */\r\n    static fromInt(value: number): Timestamp;\r\n\r\n    /**\r\n     * Returns a Timestamp representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     *\r\n     * @param value The number in question.\r\n     */\r\n    static fromNumber(value: number): Timestamp;\r\n\r\n    /**\r\n     * Returns a Timestamp representation of the given string, written using the given radix.\r\n     *\r\n     * @param str The textual representation of the Timestamp.\r\n     * @param radix The radix in which the text is written.\r\n     */\r\n    static fromString(str: string, radix?: number): Timestamp;\r\n\r\n    /**\r\n     * Returns the sum of this and the given Timestamp.\r\n     *\r\n     * @param other Timestamp to add to this one.\r\n     */\r\n    add(other: Timestamp): Timestamp;\r\n\r\n    /**\r\n     * Returns the bitwise-AND of this Timestamp and the given one.\r\n     *\r\n     * @param other Timestamp to add to this one.\r\n     */\r\n    and(other: Timestamp): Timestamp;\r\n\r\n    /**\r\n     * Compares this Timestamp with the given one.\r\n     *\r\n     * @param other Timestamp to compare against.\r\n     */\r\n    compare(other: Timestamp): number;\r\n\r\n    /**\r\n     * Returns this Timestamp divided by the given one.\r\n     *\r\n     * @param other Timestamp by which to divide.\r\n     */\r\n    div(other: Timestamp): Timestamp;\r\n\r\n    /**\r\n     * Return whether this Timestamp equals the other\r\n     *\r\n     * @param other\r\n     */\r\n    equals(other: Timestamp): boolean;\r\n\r\n    /**\r\n     * Return the high 32-bits value.\r\n     */\r\n    getHighBits(): number;\r\n\r\n    /**\r\n     * Return the low 32-bits value.\r\n     */\r\n    getLowBits(): number;\r\n\r\n    /**\r\n     * Return the low unsigned 32-bits value.\r\n     */\r\n    getLowBitsUnsigned(): number;\r\n\r\n    /**\r\n     * Returns the number of bits needed to represent the absolute value of this Timestamp.\r\n     */\r\n    getNumBitsAbs(): number;\r\n\r\n    /**\r\n     * Return whether this Timestamp is greater than the other.\r\n     *\r\n     * @param other Timestamp to compare against.\r\n     */\r\n    greaterThan(other: Timestamp): number;\r\n\r\n    /**\r\n     * Return whether this Timestamp is greater than or equal to the other.\r\n     *\r\n     * @param other Timestamp to compare against.\r\n     */\r\n    greaterThanOrEqual(other: Timestamp): number;\r\n\r\n    /**\r\n     * Return whether this value is negative.\r\n     */\r\n    isNegative(): boolean;\r\n\r\n    /**\r\n     * IsOdd.\r\n     * Return whether this value is odd.\r\n     */\r\n    isOdd(): boolean;\r\n\r\n    /**\r\n     * Return whether this value is zero.\r\n     */\r\n    isZero(): boolean;\r\n\r\n    /**\r\n     * Return whether this Timestamp is less than the other.\r\n     *\r\n     * @param other Timestamp to compare against.\r\n     */\r\n    lessThan(other: Timestamp): boolean;\r\n\r\n    /**\r\n     * Return whether this Timestamp is less than or equal to the other.\r\n     *\r\n     * @param other Timestamp to compare against.\r\n     */\r\n    lessThanOrEqual(other: Timestamp): boolean;\r\n\r\n    /**\r\n     * Returns this Timestamp modulo the given one.\r\n     *\r\n     * @param other Timestamp by which to mod.\r\n     */\r\n    modulo(other: Timestamp): Timestamp;\r\n\r\n    /**\r\n     * Returns the product of this and the given Timestamp.\r\n     *\r\n     * @param other Timestamp to multiply with this.\r\n     */\r\n    multiply(other: Timestamp): Timestamp;\r\n\r\n    /**\r\n     * The negation of this value.\r\n     */\r\n    negate(): Timestamp;\r\n\r\n    /**\r\n     * The bitwise-NOT of this value.\r\n     */\r\n    not(): Timestamp;\r\n\r\n    /**\r\n     * Return whether this Timestamp does not equal the other.\r\n     *\r\n     * @param other Timestamp to compare against.\r\n     */\r\n    notEquals(other: Timestamp): boolean;\r\n\r\n    /**\r\n     * Returns the bitwise-OR of this Timestamp and the given one.\r\n     *\r\n     * @param other The Timestamp with which to OR.\r\n     */\r\n    or(other: Timestamp): Timestamp;\r\n\r\n    /**\r\n     * Returns this Timestamp with bits shifted to the left by the given amount.\r\n     *\r\n     * @param other The number of bits by which to shift.\r\n     */\r\n    shiftLeft(other: number): Timestamp;\r\n\r\n    /**\r\n     * Returns this Timestamp with bits shifted to the right by the given amount.\r\n     *\r\n     * @param other The number of bits by which to shift.\r\n     */\r\n    shiftRight(other: number): Timestamp;\r\n\r\n    /**\r\n     * Returns this Timestamp with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\r\n     *\r\n     * @param other\r\n     */\r\n    shiftRightUnsigned(other: number): Timestamp;\r\n\r\n    /**\r\n     * Returns the difference of this and the given Timestamp.\r\n     *\r\n     * @param other Timestamp to subtract from this.\r\n     */\r\n    subtract(other: Timestamp): Timestamp;\r\n\r\n    /**\r\n     * Return the int value.\r\n     */\r\n    toInt(): number;\r\n\r\n    /**\r\n     * Return the JSON value.\r\n     */\r\n    toJSON(): string;\r\n\r\n    /**\r\n     * Return the Number value.\r\n     */\r\n    toNumber(): number;\r\n\r\n    /**\r\n     * Return the String value.\r\n     *\r\n     * @param radix The radix in which the text should be written.\r\n     */\r\n    toString(radix?: number): string;\r\n\r\n    /**\r\n     * Returns the bitwise-XOR of this Timestamp and the given one.\r\n     *\r\n     * @param other The Timestamp with which to XOR.\r\n     */\r\n    xor(other: Timestamp): Timestamp;\r\n}\r\n\r\nexport interface CollectionDeleteOneOptions {\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimmeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\r\n     */\r\n    bypassDocumentValidation?: boolean;\r\n}\r\n\r\nexport interface CollectionDistinctOptions {\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n}\r\n\r\n/**\r\n * Create a new ObjectID instance.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html\r\n */\r\nexport interface Collection {\r\n\r\n    /**\r\n     * Get the collection name.\r\n     */\r\n    collectionName: string;\r\n\r\n    /**\r\n     * Get the full collection namespace.\r\n     */\r\n    namespace: string;\r\n\r\n    /**\r\n     * The current write concern values.\r\n     */\r\n    writeConcern: any;\r\n\r\n    /**\r\n     * The current read concern values.\r\n     */\r\n    readConcern: any;\r\n\r\n    /**\r\n     * Get current index hint for collection.\r\n     */\r\n    hint: any;\r\n\r\n    /**\r\n     * Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\r\n     *\r\n     * @param pipeline Array containing all the aggregation framework commands for the execution.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#aggregate\r\n     */\r\n    aggregate(pipeline: Object[], callback: MongoCallback<any>): AggregationCursor<any>;\r\n\r\n    /**\r\n     * Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\r\n     *\r\n     * @param pipeline Array containing all the aggregation framework commands for the execution.\r\n     * @param options Optional.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#aggregate\r\n     */\r\n    aggregate(pipeline: Object[], options?: CollectionAggregationOptions, callback?: MongoCallback<any>): AggregationCursor<any>;\r\n\r\n    /**\r\n     * Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\r\n     *\r\n     * @param pipeline Array containing all the aggregation framework commands for the execution.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#aggregate\r\n     */\r\n    aggregate<T>(pipeline: Object[], callback: MongoCallback<any>): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\r\n     *\r\n     * @param pipeline Array containing all the aggregation framework commands for the execution.\r\n     * @param options Optional.\r\n     * @param callback Optional\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#aggregate\r\n     */\r\n    aggregate<T>(pipeline: Object[], options?: CollectionAggregationOptions, callback?: MongoCallback<any>): AggregationCursor<T>;\r\n\r\n    /**\r\n     * BulkWrite.\r\n     *\r\n     * @param operations Bulk operations to perform.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#bulkWrite\r\n     */\r\n    bulkWrite(operations: Object[], callback: MongoCallback<BulkWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * BulkWrite.\r\n     *\r\n     * @param operations Bulk operations to perform.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#bulkWrite\r\n     */\r\n    bulkWrite(operations: Object[], options?: CollectionBluckWriteOptions): Promise<BulkWriteOpResultObject>;\r\n\r\n    /**\r\n     * BulkWrite.\r\n     *\r\n     * @param operations Bulk operations to perform.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#bulkWrite\r\n     */\r\n    bulkWrite(operations: Object[], options: CollectionBluckWriteOptions, callback: MongoCallback<BulkWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * Count number of matching documents in the db to a query.\r\n     *\r\n     * @param query The query for the count.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#count\r\n     */\r\n    count(query: Object, callback: MongoCallback<number>): void;\r\n\r\n    /**\r\n     * Count number of matching documents in the db to a query.\r\n     *\r\n     * @param query The query for the count.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#count\r\n     */\r\n    count(query: Object, options?: MongoCountPreferences): Promise<number>;\r\n\r\n    /**\r\n     * Count number of matching documents in the db to a query.\r\n     *\r\n     * @param query The query for the count=\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#count\r\n     */\r\n    count(query: Object, options: MongoCountPreferences, callback: MongoCallback<number>): void;\r\n\r\n    /**\r\n     * Creates an index on the db and collection collection.\r\n     *\r\n     * @param fieldOrSpec Defines the index.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#createIndex\r\n     */\r\n    createIndex(fieldOrSpec: string | any, callback: MongoCallback<string>): void;\r\n\r\n    /**\r\n     * Creates an index on the db and collection collection.\r\n     *\r\n     * @param fieldOrSpec Defines the index.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#createIndex\r\n     */\r\n    createIndex(fieldOrSpec: string | any, options?: MongodbIndexOptions): Promise<string>;\r\n\r\n    /**\r\n     * Creates an index on the db and collection collection.\r\n     *\r\n     * @param fieldOrSpec Defines the index.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#createIndex\r\n     */\r\n    createIndex(fieldOrSpec: string | any, options: MongodbIndexOptions, callback: MongoCallback<string>): void;\r\n\r\n    /**\r\n     * CreateIndexes.\r\n     *\r\n     * @param indexSpecs An array of index specifications to be created.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#createIndexes and http://docs.mongodb.org/manual/reference/command/createIndexes/\r\n     */\r\n    createIndexes(indexSpecs: Object[]): Promise<any>;\r\n\r\n    /**\r\n     * CreateIndexes.\r\n     *\r\n     * @param indexSpecs An array of index specifications to be created.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#createIndexes and http://docs.mongodb.org/manual/reference/command/createIndexes/\r\n     */\r\n    createIndexes(indexSpecs: Object[], callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Delete multiple documents on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the documents to remove.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#deleteMany\r\n     */\r\n    deleteMany(filter: Object, callback: MongoCallback<DeleteWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * Delete multiple documents on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the documents to remove.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#deleteMany\r\n     */\r\n    deleteMany(filter: Object, options?: CollectionOptions): Promise<DeleteWriteOpResultObject>;\r\n\r\n    /**\r\n     * Delete multiple documents on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the documents to remove.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#deleteMany\r\n     */\r\n    deleteMany(filter: Object, options: CollectionOptions, callback: MongoCallback<DeleteWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * Delete a document on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to remove.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#deleteOne\r\n     */\r\n    deleteOne(filter: Object, callback: MongoCallback<DeleteWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * Delete a document on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to remove.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#deleteOne\r\n     */\r\n    deleteOne(filter: Object, options?: CollectionDeleteOneOptions): Promise<DeleteWriteOpResultObject>;\r\n\r\n    /**\r\n     * Delete a document on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to remove.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#deleteOne\r\n     */\r\n    deleteOne(filter: Object, options: CollectionDeleteOneOptions, callback: MongoCallback<DeleteWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * The distinct command returns returns a list of distinct values for the given key across a collection.\r\n     *\r\n     * @param key Field of the document to find distinct values for.\r\n     * @param query The query for filtering the set of documents to which we apply the distinct filter.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#distinct\r\n     */\r\n    distinct(key: string, query: Object, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * The distinct command returns returns a list of distinct values for the given key across a collection.\r\n     *\r\n     * @param key Field of the document to find distinct values for.\r\n     * @param query The query for filtering the set of documents to which we apply the distinct filter.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#distinct\r\n     */\r\n    distinct(key: string, query: Object, options?: CollectionDistinctOptions): Promise<any>;\r\n\r\n    /**\r\n     * The distinct command returns returns a list of distinct values for the given key across a collection.\r\n     *\r\n     * @param key Field of the document to find distinct values for.\r\n     * @param query The query for filtering the set of documents to which we apply the distinct filter.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#distinct\r\n     */\r\n    distinct(key: string, query: Object, options: CollectionDistinctOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#drop\r\n     */\r\n    drop(): Promise<any>;\r\n\r\n    /**\r\n     * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#drop\r\n     */\r\n    drop(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Drops an index from this collection.\r\n     *\r\n     * @param indexName Name of the index to drop.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#dropIndex\r\n     */\r\n    dropIndex(indexName: string, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Drops an index from this collection.\r\n     *\r\n     * @param indexName Name of the index to drop.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#dropIndex\r\n     */\r\n    dropIndex(indexName: string, options?: CollectionOptions): Promise<any>;\r\n\r\n    /**\r\n     * Drops an index from this collection.\r\n     *\r\n     * @param indexName Name of the index to drop.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#dropIndex\r\n     */\r\n    dropIndex(indexName: string, options: CollectionOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Drops all indexes from this collection.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#dropIndexes\r\n     */\r\n    dropIndexes(): Promise<any>;\r\n\r\n    /**\r\n     * Drops all indexes from this collection.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#dropIndexes\r\n     */\r\n    dropIndexes(callback?: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Creates a cursor for a query that can be used to iterate over results from MongoDB.\r\n     *\r\n     * @param query The cursor query object.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#find\r\n     */\r\n    find(query?: Object): Cursor<any>;\r\n\r\n    /**\r\n     * Creates a cursor for a query that can be used to iterate over results from MongoDB.\r\n     *\r\n     * @param query The cursor query object.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#find\r\n     */\r\n    find<T>(query?: Object): Cursor<T>;\r\n\r\n    /** @deprecated */\r\n    find(query: Object, fields?: Object, skip?: number, limit?: number, timeout?: number): Cursor<any>;\r\n\r\n    /**\r\n     * Fetches the first document that matches the query.\r\n     *\r\n     * @param query Query for find Operation.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOne\r\n     * @deprecated use find().limit(1).next(function(err, doc){}).\r\n     */\r\n    findOne(query: Object, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Fetches the first document that matches the query.\r\n     *\r\n     * @param query Query for find Operation.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOne\r\n     * @deprecated use find().limit(1).next(function(err, doc){}).\r\n     */\r\n    findOne(query: Object, options?: MongodbFindOneOptions): Promise<any>;\r\n\r\n    /**\r\n     * Fetches the first document that matches the query.\r\n     *\r\n     * @param query Query for find Operation.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOne\r\n     * @deprecated use find().limit(1).next(function(err, doc){}).\r\n     */\r\n    findOne(query: Object, options: MongodbFindOneOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation.\r\n     *\r\n     * @param filter Document selection filter.\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOneAndDelete\r\n     */\r\n    findOneAndDelete(filter: Object, callback: MongoCallback<FindAndModifyWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation.\r\n     *\r\n     * @param filter Document selection filter.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOneAndDelete\r\n     */\r\n    findOneAndDelete(filter: Object, options?: FindOneAndDeleteOptions): Promise<FindAndModifyWriteOpResultObject>;\r\n\r\n    /**\r\n     * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation.\r\n     *\r\n     * @param filter Document selection filter.\r\n     * @param options Optional settings.\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOneAndDelete\r\n     */\r\n    findOneAndDelete(filter: Object, options: FindOneAndDeleteOptions, callback: MongoCallback<FindAndModifyWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation.\r\n     *\r\n     * @param filter Document selection filter.\r\n     * @param replacement Document replacing the matching document.\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOneAndReplace\r\n     */\r\n    findOneAndReplace(filter: Object, replacement: Object, callback: MongoCallback<FindAndModifyWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation.\r\n     *\r\n     * @param filter Document selection filter.\r\n     * @param replacement Document replacing the matching document.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOneAndReplace\r\n     */\r\n    findOneAndReplace(filter: Object, replacement: Object, options?: FindOneAndReplaceOption): Promise<FindAndModifyWriteOpResultObject>;\r\n\r\n    /**\r\n     * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation.\r\n     *\r\n     * @param filter Document selection filter.\r\n     * @param replacement Document replacing the matching document.\r\n     * @param options Optional settings.\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOneAndReplace\r\n     */\r\n    findOneAndReplace(filter: Object, replacement: Object, options: FindOneAndReplaceOption, callback: MongoCallback<FindAndModifyWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation.\r\n     *\r\n     * @param filter Document selection filter.\r\n     * @param update Update operations to be performed on the document.\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOneAndUpdate\r\n     */\r\n    findOneAndUpdate(filter: Object, update: Object, callback: MongoCallback<FindAndModifyWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation.\r\n     *\r\n     * @param filter Document selection filter.\r\n     * @param update Update operations to be performed on the document.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOneAndUpdate\r\n     */\r\n    findOneAndUpdate(filter: Object, update: Object, options?: FindOneAndReplaceOption): Promise<FindAndModifyWriteOpResultObject>;\r\n\r\n    /**\r\n     * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation.\r\n     *\r\n     * @param filter Document selection filter.\r\n     * @param update Update operations to be performed on the document.\r\n     * @param options Optional settings.\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOneAndUpdate\r\n     */\r\n    findOneAndUpdate(filter: Object, update: Object, options: FindOneAndReplaceOption, callback: MongoCallback<FindAndModifyWriteOpResultObject>): void;\r\n\r\n    /**\r\n     * Execute a geo search using a geo haystack index on a collection.\r\n     *\r\n     * @param x Point to search on the x axis, ensure the indexes are ordered in the same order.\r\n     * @param y Point to search on the y axis, ensure the indexes are ordered in the same order.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#geoHaystackSearch\r\n     */\r\n    geoHaystackSearch(x: number, y: number, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Execute a geo search using a geo haystack index on a collection.\r\n     *\r\n     * @param x Point to search on the x axis, ensure the indexes are ordered in the same order.\r\n     * @param y Point to search on the y axis, ensure the indexes are ordered in the same order.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#geoHaystackSearch\r\n     */\r\n    geoHaystackSearch(x: number, y: number, options?: GeoHaystackSearchOptions): Promise<any>;\r\n\r\n    /**\r\n     * Execute a geo search using a geo haystack index on a collection.\r\n     *\r\n     * @param x Point to search on the x axis, ensure the indexes are ordered in the same order.\r\n     * @param y Point to search on the y axis, ensure the indexes are ordered in the same order.\r\n     * @param options Optional settings\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#geoHaystackSearch\r\n     */\r\n    geoHaystackSearch(x: number, y: number, options: GeoHaystackSearchOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Execute the geoNear command to search for items in the collection.\r\n     *\r\n     * @param x Point to search on the x axis, ensure the indexes are ordered in the same order.\r\n     * @param y Point to search on the y axis, ensure the indexes are ordered in the same order.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#geoNear\r\n     */\r\n    geoNear(x: number, y: number, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Execute the geoNear command to search for items in the collection.\r\n     *\r\n     * @param x Point to search on the x axis, ensure the indexes are ordered in the same order.\r\n     * @param y Point to search on the y axis, ensure the indexes are ordered in the same order.\r\n     * @param options Optionals.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#geoNear\r\n     */\r\n    geoNear(x: number, y: number, options?: GeoNearOptions): Promise<any>;\r\n\r\n    /**\r\n     * Execute the geoNear command to search for items in the collection.\r\n     *\r\n     * @param x Point to search on the x axis, ensure the indexes are ordered in the same order.\r\n     * @param y Point to search on the y axis, ensure the indexes are ordered in the same order.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#geoNear\r\n     */\r\n    geoNear(x: number, y: number, options: GeoNearOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Run a group command across a collection.\r\n     *\r\n     * @param keys An object, array or function expressing the keys to group by.\r\n     * @param condition An optional condition that must be true for a row to be considered.\r\n     * @param initial Initial value of the aggregation counter object.\r\n     * @param reduce The reduce function aggregates (reduces) the objects iterated.\r\n     * @param finalize An optional function to be run on each item in the result set just before the item is returned.\r\n     * @param command Specify if you wish to run using the internal group command or using eval, default is true.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#group\r\n     */\r\n    group(keys: Object | Array<any> | Function | Code, condition: Object, initial: Object, reduce: Function | Code, finalize: Function | Code, command: boolean, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Run a group command across a collection.\r\n     *\r\n     * @param keys An object, array or function expressing the keys to group by.\r\n     * @param condition An optional condition that must be true for a row to be considered.\r\n     * @param initial Initial value of the aggregation counter object.\r\n     * @param reduce The reduce function aggregates (reduces) the objects iterated.\r\n     * @param finalize An optional function to be run on each item in the result set just before the item is returned.\r\n     * @param command Specify if you wish to run using the internal group command or using eval, default is true.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#group\r\n     */\r\n    group(keys: Object | Array<any> | Function | Code, condition: Object, initial: Object, reduce: Function | Code, finalize: Function | Code, command: boolean, options?: GroupOptions): Promise<any>;\r\n\r\n    /**\r\n     * Run a group command across a collection.\r\n     *\r\n     * @param keys An object, array or function expressing the keys to group by.\r\n     * @param condition An optional condition that must be true for a row to be considered.\r\n     * @param initial Initial value of the aggregation counter object.\r\n     * @param reduce The reduce function aggregates (reduces) the objects iterated.\r\n     * @param finalize An optional function to be run on each item in the result set just before the item is returned.\r\n     * @param command Specify if you wish to run using the internal group command or using eval, default is true.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#group\r\n     */\r\n    group(keys: Object | Array<any> | Function | Code, condition: Object, initial: Object, reduce: Function | Code, finalize: Function | Code, command: boolean, options: GroupOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Retrieve all the indexes on the collection.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#indexes\r\n     */\r\n    indexes(): Promise<any>;\r\n\r\n    /**\r\n     * Retrieve all the indexes on the collection.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#indexes\r\n     */\r\n    indexes(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Checks if one or more indexes exist on the collection, fails on first non-existing index.\r\n     *\r\n     * @param indexes One or more index names to check.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#indexExists\r\n     */\r\n    indexExists(indexes: string | string[]): Promise<boolean>;\r\n\r\n    /**\r\n     * Checks if one or more indexes exist on the collection, fails on first non-existing index.\r\n     *\r\n     * @param indexes One or more index names to check.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#indexExists\r\n     */\r\n    indexExists(indexes: string | string[], callback: MongoCallback<boolean>): void;\r\n\r\n    /**\r\n     * Retrieves this collections index info.\r\n     *\r\n     * @param callback The command result callback\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#indexInformation\r\n     */\r\n    indexInformation(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Retrieves this collections index info.\r\n     *\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#indexInformation\r\n     */\r\n    indexInformation(options?: { full: boolean }): Promise<any>;\r\n\r\n    /**\r\n     * Retrieves this collections index info.\r\n     *\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#indexInformation\r\n     */\r\n    indexInformation(options: { full: boolean }, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Initiate an In order bulk write operation, operations will be serially executed in the order they are added,\r\n     * creating a new operation for each switch in types.\r\n     *\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#initializeOrderedBulkOp\r\n     */\r\n    initializeOrderedBulkOp(options?: CollectionOptions): OrderedBulkOperation;\r\n\r\n    /**\r\n     * Initiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\r\n     *\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#initializeUnorderedBulkOp\r\n     */\r\n    initializeUnorderedBulkOp(options?: CollectionOptions): UnorderedBulkOperation;\r\n\r\n    // http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#insertOne\r\n    /** @deprecated Use insertOne, insertMany or bulkWrite */\r\n    insert(docs: Object, callback: MongoCallback<InsertOneWriteOpResult>): void;\r\n    /** @deprecated Use insertOne, insertMany or bulkWrite */\r\n    insert(docs: Object, options?: CollectionInsertOneOptions): Promise<InsertOneWriteOpResult>;\r\n    /** @deprecated Use insertOne, insertMany or bulkWrite */\r\n    insert(docs: Object, options: CollectionInsertOneOptions, callback: MongoCallback<InsertOneWriteOpResult>): void;\r\n\r\n    /**\r\n     * InsertMany.\r\n     *\r\n     * @param docs Documents to insert.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#insertMany\r\n     */\r\n    insertMany(docs: Object[], callback: MongoCallback<InsertWriteOpResult>): void;\r\n\r\n    /**\r\n     * InsertMany.\r\n     *\r\n     * @param docs Documents to insert.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#insertMany\r\n     */\r\n    insertMany(docs: Object[], options?: CollectionInsertManyOptions): Promise<InsertWriteOpResult>;\r\n\r\n    /**\r\n     * InsertMany.\r\n     *\r\n     * @param docs Documents to insert.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#insertMany\r\n     */\r\n    insertMany(docs: Object[], options: CollectionInsertManyOptions, callback: MongoCallback<InsertWriteOpResult>): void;\r\n\r\n    /**\r\n     * InsertOne.\r\n     *\r\n     * @param docs Document to insert.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#insertOne\r\n     */\r\n    insertOne(docs: Object, callback: MongoCallback<InsertOneWriteOpResult>): void;\r\n\r\n    /**\r\n     * InsertOne.\r\n     *\r\n     * @param docs Document to insert.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#insertOne\r\n     */\r\n    insertOne(docs: Object, options?: CollectionInsertOneOptions): Promise<InsertOneWriteOpResult>;\r\n\r\n    /**\r\n     * InsertOne.\r\n     *\r\n     * @param docs Document to insert.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#insertOne\r\n     */\r\n    insertOne(docs: Object, options: CollectionInsertOneOptions, callback: MongoCallback<InsertOneWriteOpResult>): void;\r\n\r\n    /**\r\n     * Returns if the collection is a capped collection.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#isCapped\r\n     */\r\n    isCapped(): Promise<any>;\r\n\r\n    /**\r\n     * Returns if the collection is a capped collection.\r\n     *\r\n     * @param callback The results callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#isCapped\r\n     */\r\n    isCapped(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Get the list of all indexes information for the collection.\r\n     *\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#listIndexes\r\n     */\r\n    listIndexes(options?: ListIndexesOptions): CommandCursor;\r\n\r\n    /**\r\n     * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\r\n     *\r\n     * @param map The mapping function.\r\n     * @param reduce The reduce function.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#mapReduce\r\n     */\r\n    mapReduce(map: Function | string, reduce: Function | string, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\r\n     *\r\n     * @param map The mapping function.\r\n     * @param reduce The reduce function.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#mapReduce\r\n     */\r\n    mapReduce(map: Function | string, reduce: Function | string, options?: MapReduceOptions): Promise<any>;\r\n\r\n    /**\r\n     * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\r\n     *\r\n     * @param map The mapping function.\r\n     * @param reduce The reduce function.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#mapReduce\r\n     */\r\n    mapReduce(map: Function | string, reduce: Function | string, options: MapReduceOptions, callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Returns the options of the collection.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#options\r\n     */\r\n    options(): Promise<any>;\r\n\r\n    /**\r\n     * Returns the options of the collection.\r\n     *\r\n     * @param callback The results callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#options\r\n     */\r\n    options(callback: MongoCallback<any>): void;\r\n\r\n    /**\r\n     * Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are\r\n     * no ordering guarantees for returned results.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#parallelCollectionScan\r\n     */\r\n    parallelCollectionScan(callback: MongoCallback<Cursor<any>[]>): void;\r\n\r\n    /**\r\n     * Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are\r\n     * no ordering guarantees for returned results.\r\n     *\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#parallelCollectionScan\r\n     */\r\n    parallelCollectionScan(options?: ParallelCollectionScanOptions): Promise<Cursor<any>[]>;\r\n\r\n    /**\r\n     * Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are\r\n     * no ordering guarantees for returned results.\r\n     *\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#parallelCollectionScan\r\n     */\r\n    parallelCollectionScan(options: ParallelCollectionScanOptions, callback: MongoCallback<Cursor<any>[]>): void;\r\n\r\n    /**\r\n     * Reindex all indexes on the collection.\r\n     *\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#reIndex\r\n     */\r\n    reIndex(): Promise<any>;\r\n\r\n    /**\r\n     * Reindex all indexes on the collection.\r\n     *\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#reIndex\r\n     */\r\n    reIndex(callback: MongoCallback<any>): void;\r\n\r\n    // http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#remove\r\n    /** @deprecated Use use deleteOne, deleteMany or bulkWrite */\r\n    remove(selector: Object, callback: MongoCallback<WriteOpResult>): void;\r\n    /** @deprecated Use use deleteOne, deleteMany or bulkWrite */\r\n    remove(selector: Object, options?: CollectionOptions & { single?: boolean }): Promise<WriteOpResult>;\r\n    /** @deprecated Use use deleteOne, deleteMany or bulkWrite */\r\n    remove(selector: Object, options?: CollectionOptions & { single?: boolean }, callback?: MongoCallback<WriteOpResult>): void;\r\n\r\n    /**\r\n     * Rename the collection.\r\n     *\r\n     * @param newName New name of of the collection.\r\n     * @param callback The results callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#rename\r\n     */\r\n    rename(newName: string, callback: MongoCallback<Collection>): void;\r\n\r\n    /**\r\n     * Rename the collection.\r\n     *\r\n     * @param newName New name of of the collection.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#rename\r\n     */\r\n    rename(newName: string, options?: { dropTarget?: boolean }): Promise<Collection>;\r\n\r\n    /**\r\n     * Rename the collection.\r\n     *\r\n     * @param newName New name of of the collection.\r\n     * @param options Optional settings.\r\n     * @param callback The results callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#rename\r\n     */\r\n    rename(newName: string, options: { dropTarget?: boolean }, callback: MongoCallback<Collection>): void;\r\n\r\n    /**\r\n     * Replace a document on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to update.\r\n     * @param doc The Document that replaces the matching document.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#replaceOne\r\n     */\r\n    replaceOne(filter: Object, doc: Object, callback: MongoCallback<UpdateWriteOpResult>): void;\r\n\r\n    /**\r\n     * Replace a document on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to update.\r\n     * @param doc The Document that replaces the matching document.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#replaceOne\r\n     */\r\n    replaceOne(filter: Object, doc: Object, options?: ReplaceOneOptions): Promise<UpdateWriteOpResult>;\r\n\r\n    /**\r\n     * Replace a document on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to update.\r\n     * @param doc The Document that replaces the matching document.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#replaceOne\r\n     */\r\n    replaceOne(filter: Object, doc: Object, options: ReplaceOneOptions, callback: MongoCallback<UpdateWriteOpResult>): void;\r\n\r\n    // http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#save\r\n    /** @deprecated Use insertOne, insertMany, updateOne or updateMany */\r\n    save(doc: Object, callback: MongoCallback<WriteOpResult>): void;\r\n    /** @deprecated Use insertOne, insertMany, updateOne or updateMany */\r\n    save(doc: Object, options?: CollectionOptions): Promise<WriteOpResult>;\r\n    /** @deprecated Use insertOne, insertMany, updateOne or updateMany */\r\n    save(doc: Object, options: CollectionOptions, callback: MongoCallback<WriteOpResult>): void;\r\n\r\n    /**\r\n     * Get all the collection statistics.\r\n     *\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#stats\r\n     */\r\n    stats(callback: MongoCallback<CollStats>): void;\r\n\r\n    /**\r\n     * Get all the collection statistics.\r\n     *\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#stats\r\n     */\r\n    stats(options?: { scale: number }): Promise<CollStats>;\r\n\r\n    /**\r\n     * Get all the collection statistics.\r\n     *\r\n     * @param options Optional settings.\r\n     * @param callback The collection result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#stats\r\n     */\r\n    stats(options: { scale: number }, callback: MongoCallback<CollStats>): void;\r\n\r\n    // http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#update\r\n    /** @deprecated use updateOne, updateMany or bulkWrite */\r\n    update(filter: Object, update: Object, callback: MongoCallback<WriteOpResult>): void;\r\n    /** @deprecated use updateOne, updateMany or bulkWrite */\r\n    update(filter: Object, update: Object, options?: ReplaceOneOptions & { multi?: boolean }): Promise<WriteOpResult>;\r\n    /** @deprecated use updateOne, updateMany or bulkWrite */\r\n    update(filter: Object, update: Object, options: ReplaceOneOptions & { multi?: boolean }, callback: MongoCallback<WriteOpResult>): void;\r\n\r\n    /**\r\n     * Update multiple documents on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to update.\r\n     * @param update The update operations to be applied to the document.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#updateMany\r\n     */\r\n    updateMany(filter: Object, update: Object, callback: MongoCallback<UpdateWriteOpResult>): void;\r\n\r\n    /**\r\n     * Update multiple documents on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to update.\r\n     * @param update The update operations to be applied to the document.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#updateMany\r\n     */\r\n    updateMany(filter: Object, update: Object, options?: UpdateManyOptions): Promise<UpdateWriteOpResult>;\r\n\r\n    /**\r\n     * Update multiple documents on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to update.\r\n     * @param update The update operations to be applied to the document.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#updateMany\r\n     */\r\n    updateMany(filter: Object, update: Object, options: UpdateManyOptions, callback: MongoCallback<UpdateWriteOpResult>): void;\r\n\r\n    /**\r\n     * Update a single document on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to update.\r\n     * @param update The update operations to be applied to the document.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#updateOne\r\n     */\r\n    updateOne(filter: Object, update: Object, callback: MongoCallback<UpdateWriteOpResult>): void;\r\n\r\n    /**\r\n     * Update a single document on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to update.\r\n     * @param update The update operations to be applied to the document.\r\n     * @param options Optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#updateOne\r\n     */\r\n    updateOne(filter: Object, update: Object, options?: ReplaceOneOptions): Promise<UpdateWriteOpResult>;\r\n\r\n    /**\r\n     * Update a single document on MongoDB.\r\n     *\r\n     * @param filter The Filter used to select the document to update.\r\n     * @param update The update operations to be applied to the document.\r\n     * @param options Optional settings.\r\n     * @param callback The command result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#updateOne\r\n     */\r\n    updateOne(filter: Object, update: Object, options: ReplaceOneOptions, callback: MongoCallback<UpdateWriteOpResult>): void;\r\n}\r\n\r\n/**\r\n * The name of the target collection.\r\n *\r\n * @see http://docs.mongodb.org/manual/reference/command/collStats/\r\n */\r\nexport interface CollStats {\r\n\r\n    /**\r\n     * Namespace.\r\n     */\r\n    ns: string;\r\n\r\n    /**\r\n     * The number of objects or documents in this collection.\r\n     */\r\n    count: number;\r\n\r\n    /**\r\n     * Collection size in bytes.\r\n     */\r\n    size: number;\r\n\r\n    /**\r\n     * Average object size in bytes.\r\n     */\r\n    avgObjSize: number;\r\n\r\n    /**\r\n     * (Pre)allocated space for the collection in bytes.\r\n     */\r\n    storageSize: number;\r\n\r\n    /**\r\n     * Number of extents (contiguously allocated chunks of datafile space).\r\n     */\r\n    numExtents: number;\r\n\r\n    /**\r\n     * Number of indexes.\r\n     */\r\n    nindexes: number;\r\n\r\n    /**\r\n     * Size of the most recently created extent in bytes.\r\n     */\r\n    lastExtentSize: number;\r\n\r\n    /**\r\n     * Padding can speed up updates if documents grow.\r\n     */\r\n    paddingFactor: number;\r\n\r\n    /**\r\n     * A number that indicates the user-set flags on the collection. userFlags\r\n     * only appears when using the mmapv1 storage engine.\r\n     */\r\n    userFlags: number;\r\n\r\n    /**\r\n     * Total index size in bytes.\r\n     */\r\n    totalIndexSize: number;\r\n\r\n    /**\r\n     * Size of specific indexes in bytes.\r\n     */\r\n    indexSizes: {\r\n        _id_: number;\r\n        username: number;\r\n    };\r\n\r\n    /**\r\n     * This field will be “true” if the collection is capped.\r\n     */\r\n    capped: boolean;\r\n\r\n    /**\r\n     * Shows the maximum size of a capped collection.\r\n     */\r\n    maxSize: boolean;\r\n\r\n    /**\r\n     * This document contains data reported directly by the WiredTiger engine and other data for internal diagnostic use.\r\n     */\r\n    wiredTiger: any;\r\n\r\n    /**\r\n     * A document that reports data from the WiredTiger storage engine for each index in the collection.\r\n     * Other storage engines will return an empty document.\r\n     */\r\n    indexDetails: any;\r\n\r\n    /**\r\n     *\r\n     */\r\n    ok: number;\r\n}\r\n\r\n/**\r\n * CollectionAggregationOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#aggregate\r\n */\r\nexport interface CollectionAggregationOptions {\r\n\r\n    readPreference?: ReadPreference | string;\r\n\r\n    /**\r\n     * Return the query as cursor, on 2.6 > it returns as a real cursor on pre 2.6 it returns as an emulated cursor.\r\n     */\r\n    cursor?: { batchSize: number };\r\n\r\n    /**\r\n     * Explain returns the aggregation execution plan (requires mongodb 2.6 >).\r\n     */\r\n    explain?: boolean;\r\n\r\n    /**\r\n     * allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 >).\r\n     */\r\n    allowDiskUse?: boolean;\r\n\r\n    /**\r\n     * maxTimeMS specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point.\r\n     */\r\n    maxTimeMS?: boolean;\r\n\r\n    /**\r\n     * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\r\n     */\r\n    bypassDocumentValidation?: boolean;\r\n}\r\n\r\n/**\r\n * CollectionInsertManyOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#insertMany\r\n */\r\nexport interface CollectionInsertManyOptions {\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * Serialize functions on any object.\r\n     */\r\n    serializeFunctions?: boolean;\r\n\r\n    /**\r\n     * Force server to assign _id values instead of driver.\r\n     */\r\n    forceServerObjectId?: boolean;\r\n}\r\n\r\nexport interface UpdateManyOptions {\r\n\r\n    /**\r\n     * Update operation is an upsert.\r\n     */\r\n    upsert?: boolean;\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: any;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n}\r\n\r\n/**\r\n * CollectionBluckWriteOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#bulkWrite\r\n */\r\nexport interface CollectionBluckWriteOptions {\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * Serialize functions on any object.\r\n     */\r\n    serializeFunctions?: boolean;\r\n\r\n    /**\r\n     * Execute write operation in ordered or unordered fashion.\r\n     */\r\n    ordered?: boolean;\r\n\r\n    /**\r\n     * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\r\n     */\r\n    bypassDocumentValidation?: boolean;\r\n}\r\n\r\n/**\r\n * BulkWriteOpResultObject.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#~BulkWriteOpResult\r\n */\r\nexport interface BulkWriteOpResultObject {\r\n\r\n    /**\r\n     * Number of documents inserted.\r\n     */\r\n    insertedCount?: number;\r\n\r\n    /**\r\n     * Number of documents matched for update.\r\n     */\r\n    matchedCount?: number;\r\n\r\n    /**\r\n     * Number of documents modified.\r\n     */\r\n    modifiedCount?: number;\r\n\r\n    /**\r\n     * Number of documents deleted.\r\n     */\r\n    deletedCount?: number;\r\n\r\n    /**\r\n     * Number of documents upserted.\r\n     */\r\n    upsertedCount?: number;\r\n\r\n    /**\r\n     * Inserted document generated Id's, hash key is the index of the originating operation.\r\n     */\r\n    insertedIds?: any;\r\n\r\n    /**\r\n     * Upserted document generated Id's, hash key is the index of the originating operation.\r\n     */\r\n    upsertedIds?: any;\r\n\r\n    /**\r\n     * The command result object.\r\n     */\r\n    result?: any;\r\n}\r\n\r\n/**\r\n * MongoCountPreferences.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#count\r\n */\r\nexport interface MongoCountPreferences {\r\n\r\n    /**\r\n     * The limit of documents to count.\r\n     */\r\n    limit?: number;\r\n\r\n    /**\r\n     * The number of documents to skip for the count.\r\n     */\r\n    skip?: boolean;\r\n\r\n    /**\r\n     * An index name hint for the query.\r\n     */\r\n    hint?: string;\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n}\r\n\r\n/**\r\n * DeleteWriteOpResultObject.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#~deleteWriteOpResult\r\n */\r\nexport interface DeleteWriteOpResultObject {\r\n\r\n    /**\r\n     * The raw result returned from MongoDB, field will vary depending on server version.\r\n     * @param ok Is 1 if the command executed correctly.\r\n     * @param n The total count of documents deleted.\r\n     */\r\n    result: {\r\n        ok?: number;\r\n        n?: number;\r\n    };\r\n\r\n    /**\r\n     * The connection object used for the operation.\r\n     */\r\n    connection?: any;\r\n\r\n    /**\r\n     * The number of documents deleted.\r\n     */\r\n    deletedCount?: number;\r\n}\r\n\r\n/**\r\n * FindAndModifyWriteOpResultObject.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#~findAndModifyWriteOpResult\r\n */\r\nexport interface FindAndModifyWriteOpResultObject {\r\n\r\n    /**\r\n     * Document returned from findAndModify command.\r\n     */\r\n    value?: any;\r\n\r\n    /**\r\n     * The raw lastErrorObject returned from the command.\r\n     */\r\n    lastErrorObject?: any;\r\n\r\n    /**\r\n     * Is 1 if the command executed correctly.\r\n     */\r\n    ok?: number;\r\n}\r\n\r\n/**\r\n * FindOneAndReplaceOption.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOneAndReplace\r\n */\r\nexport interface FindOneAndReplaceOption {\r\n\r\n    /**\r\n     * Limits the fields to return for all matching documents.\r\n     */\r\n    projection?: Object;\r\n\r\n    /**\r\n     * Determines which document the operation modifies if the query selects multiple documents.\r\n     */\r\n    sort?: Object;\r\n\r\n    /**\r\n     * The maximum amount of time to allow the query to run.\r\n     */\r\n    maxTimeMS?: number;\r\n\r\n    /**\r\n     * Upsert the document if it does not exist.\r\n     */\r\n    upsert?: boolean;\r\n\r\n    /**\r\n     * When false, returns the updated document rather than the original. The default is true.\r\n     */\r\n    returnOriginal?: boolean;\r\n}\r\n\r\n/**\r\n * GeoHaystackSearchOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#geoHaystackSearch\r\n */\r\nexport interface GeoHaystackSearchOptions {\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n\r\n    /**\r\n     * Include results up to maxDistance from the point.\r\n     */\r\n    maxDistance?: number;\r\n\r\n    /**\r\n     * Filter the results by a query.\r\n     */\r\n    search?: Object;\r\n\r\n    /**\r\n     * Max number of results to return.\r\n     */\r\n    limit?: number;\r\n}\r\n\r\n/**\r\n * GeoNearOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#geoNear\r\n */\r\nexport interface GeoNearOptions {\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n\r\n    /**\r\n     * Max number of results to return.\r\n     */\r\n    num?: number;\r\n\r\n    /**\r\n     * Include results starting at minDistance from a point (2.6 or higher).\r\n     */\r\n    minDistance?: number;\r\n\r\n    /**\r\n     * Include results up to maxDistance from the point.\r\n     */\r\n    maxDistance?: number;\r\n\r\n    /**\r\n     * Include a value to multiply the distances with allowing for range conversions.\r\n     */\r\n    distanceMultiplier?: number;\r\n\r\n    /**\r\n     * Filter the results by a query.\r\n     */\r\n    query?: Object;\r\n\r\n    /**\r\n     * Perform query using a spherical model.\r\n     */\r\n    spherical?: boolean;\r\n\r\n    /**\r\n     * The closest location in a document to the center of the search region will always be returned MongoDB > 2.X.\r\n     */\r\n    uniqueDocs?: boolean;\r\n\r\n    /**\r\n     * Include the location data fields in the top level of the results MongoDB > 2.X.\r\n     */\r\n    includeLocs?: boolean;\r\n}\r\n\r\n/**\r\n * A class representation of the BSON Code type.\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Code.html\r\n */\r\nexport declare class Code {\r\n    /**\r\n     *\r\n     * @param code a string or function.\r\n     * @param scope optional\r\n     */\r\n    constructor(code: string | Function, scope?: Object)\r\n\r\n    /**\r\n     * A string or function.\r\n     */\r\n    code: string | Function;\r\n\r\n    /**\r\n     * An optional scope for the function.\r\n     */\r\n    scope: any;\r\n}\r\n\r\n/**\r\n * CollectionOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#deleteMany\r\n */\r\nexport interface CollectionOptions {\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n}\r\n\r\n/**\r\n * Create a new OrderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly).\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/OrderedBulkOperation.html\r\n */\r\nexport interface OrderedBulkOperation {\r\n    /**\r\n     * Get the number of operations in the bulk.\r\n     */\r\n    length: number;\r\n\r\n    /**\r\n     * Execute the ordered bulk operation.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/OrderedBulkOperation.html#execute\r\n     */\r\n    execute(callback: MongoCallback<BulkWriteResult>): void;\r\n\r\n    /**\r\n     * Execute the ordered bulk operation.\r\n     * @param options optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/OrderedBulkOperation.html#execute\r\n     */\r\n    execute(options?: FSyncOptions): Promise<BulkWriteResult>;\r\n\r\n    /**\r\n     * Execute the ordered bulk operation.\r\n     * @param options Optional settings.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/OrderedBulkOperation.html#execute\r\n     */\r\n    execute(options: FSyncOptions, callback: MongoCallback<BulkWriteResult>): void;\r\n\r\n    /**\r\n     * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne.\r\n     * @param selector The selector for the bulk operation.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/OrderedBulkOperation.html#find\r\n     */\r\n    find(selector: Object): FindOperatorsOrdered;\r\n\r\n    /**\r\n     * Add a single insert document to the bulk operation.\r\n     * @param doc The document to insert\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/OrderedBulkOperation.html#insert\r\n     */\r\n    insert(doc: Object): OrderedBulkOperation;\r\n}\r\n\r\n/**\r\n * BulkWriteResult.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/BulkWriteResult.html\r\n */\r\nexport interface BulkWriteResult {\r\n\r\n    /**\r\n     * Did bulk operation correctly execute.\r\n     */\r\n    ok: number;\r\n\r\n    /**\r\n     * number of inserted documents.\r\n     */\r\n    nInserted: number;\r\n\r\n    /**\r\n     * number of documents updated logically.\r\n     */\r\n    nUpdated: number;\r\n\r\n    /**\r\n     * Number of upserted documents.\r\n     */\r\n    nUpserted: number;\r\n\r\n    /**\r\n     *\r\n     Number of documents updated physically on disk.\r\n     */\r\n    nModified: number;\r\n\r\n    /**\r\n     * Number of removed documents.\r\n     */\r\n    nRemoved: number;\r\n\r\n    /**\r\n     * Return an array of inserted ids.\r\n     */\r\n    getInsertedIds(): Array<Object>;\r\n\r\n    /**\r\n     * Retrieve lastOp if available.\r\n     */\r\n    getLastOp(): Object;\r\n\r\n    /**\r\n     * Return raw internal result.\r\n     */\r\n    getRawResponse(): Object;\r\n\r\n    /**\r\n     * Return the upserted id at position x.\r\n     */\r\n    getUpsertedIdAt(index: number): Object;\r\n\r\n    /**\r\n     * Return an array of upserted ids.\r\n     */\r\n    getUpsertedIds(): Array<Object>;\r\n\r\n    /**\r\n     * Retrieve the write concern error if any.\r\n     */\r\n    getWriteConcernError(): WriteConcernError;\r\n\r\n    /**\r\n     * Returns a specific write error object.\r\n     */\r\n    getWriteErrorAt(index: number): WriteError;\r\n\r\n    /**\r\n     * Returns the number of write errors off the bulk operation.\r\n     */\r\n    getWriteErrorCount(): number;\r\n\r\n    /**\r\n     * Retrieve all write errors.\r\n     */\r\n    getWriteErrors(): Array<Object>;\r\n\r\n    /**\r\n     * Returns true if the bulk operation contains a write error.\r\n     */\r\n    hasWriteErrors(): boolean;\r\n}\r\n\r\n/**\r\n * Create a new WriteError instance (INTERNAL TYPE, do not instantiate directly).\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/WriteError.html\r\n */\r\nexport interface WriteError {\r\n\r\n    /**\r\n     * Write concern error code.\r\n     */\r\n    code: number;\r\n\r\n    /**\r\n     * Write concern error original bulk operation index.\r\n     */\r\n    index: number;\r\n\r\n    /**\r\n     * Write concern error message.\r\n     */\r\n    errmsg: string;\r\n}\r\n\r\n/**\r\n * Create a new WriteConcernError instance (INTERNAL TYPE, do not instantiate directly).\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/WriteConcernError.html\r\n */\r\nexport interface WriteConcernError {\r\n\r\n    /**\r\n     * Write concern error code.\r\n     */\r\n    code: number;\r\n\r\n    /**\r\n     * Write concern error message.\r\n     */\r\n    errmsg: string;\r\n}\r\n\r\n/**\r\n * Create a FindOperatorsOrdered instance (INTERNAL TYPE, do not instantiate directly).\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/FindOperatorsOrdered.html\r\n */\r\nexport interface FindOperatorsOrdered {\r\n\r\n    /**\r\n     * Add a remove operation to the bulk operation.\r\n     */\r\n    delete(): OrderedBulkOperation;\r\n\r\n    /**\r\n     * Add a remove one operation to the bulk operation.\r\n     */\r\n    deleteOne(): OrderedBulkOperation;\r\n\r\n    /**\r\n     * Add a replace one operation to the bulk operation.\r\n     */\r\n    replaceOne(doc: Object): OrderedBulkOperation;\r\n\r\n    /**\r\n     * Add a single update document to the bulk operation.\r\n     */\r\n    update(doc: Object): OrderedBulkOperation;\r\n\r\n    /**\r\n     * Add a single update one document to the bulk operation.\r\n     */\r\n    updateOne(doc: Object): OrderedBulkOperation;\r\n\r\n    /**\r\n     * Upsert modifier for update bulk operation.\r\n     */\r\n    upsert(): FindOperatorsOrdered;\r\n}\r\n\r\n/**\r\n * Create a new UnorderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly).\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/UnorderedBulkOperation.html\r\n */\r\nexport interface UnorderedBulkOperation {\r\n\r\n    /**\r\n     * Get the number of operations in the bulk.\r\n     */\r\n    length: number;\r\n\r\n    /**\r\n     * Execute the ordered bulk operation.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/UnorderedBulkOperation.html#execute\r\n     */\r\n    execute(callback: MongoCallback<BulkWriteResult>): void;\r\n\r\n    /**\r\n     * Execute the ordered bulk operation.\r\n     * @param options optional.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/UnorderedBulkOperation.html#execute\r\n     */\r\n    execute(options?: FSyncOptions): Promise<BulkWriteResult>;\r\n\r\n    /**\r\n     * Execute the ordered bulk operation.\r\n     * @param options Optional settings.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/UnorderedBulkOperation.html#execute\r\n     */\r\n    execute(options: FSyncOptions, callback: MongoCallback<BulkWriteResult>): void;\r\n\r\n    /**\r\n     * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne.\r\n     * @param selector The selector for the bulk operation.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/UnorderedBulkOperation.html#find\r\n     */\r\n    find(selector: Object): FindOperatorsUnordered;\r\n\r\n    /**\r\n     * Add a single insert document to the bulk operation.\r\n     * @param doc The document to insert.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/UnorderedBulkOperation.html#insert\r\n     */\r\n    insert(doc: Object): UnorderedBulkOperation;\r\n}\r\n\r\n/**\r\n * Create a FindOperatorsUnordered instance (INTERNAL TYPE, do not instantiate directly).\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/FindOperatorsUnordered.html\r\n */\r\nexport interface FindOperatorsUnordered {\r\n\r\n    /**\r\n     * Get the number of operations in the bulk.\r\n     */\r\n    length: number;\r\n\r\n    /**\r\n     * Add a remove operation to the bulk operation.\r\n     */\r\n    remove(): UnorderedBulkOperation;\r\n\r\n    /**\r\n     * Add a remove one operation to the bulk operation.\r\n     */\r\n    removeOne(): UnorderedBulkOperation;\r\n\r\n    /**\r\n     * Add a replace one operation to the bulk operation.\r\n     * @param doc The new document to replace the existing one with.\r\n     */\r\n    replaceOne(doc: Object): UnorderedBulkOperation;\r\n\r\n    /**\r\n     * Add a single update document to the bulk operation.\r\n     * @param doc Update operations\r\n     */\r\n    update(doc: Object): UnorderedBulkOperation;\r\n\r\n    /**\r\n     * Add a single update one document to the bulk operation.\r\n     * @param doc Update operations\r\n     */\r\n    updateOne(doc: Object): UnorderedBulkOperation;\r\n\r\n    /**\r\n     * Upsert modifier for update bulk operation.\r\n     */\r\n    upsert(): FindOperatorsUnordered;\r\n}\r\n\r\n/**\r\n * MongodbFindOneOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#findOne\r\n */\r\nexport interface MongodbFindOneOptions {\r\n\r\n    /**\r\n     * Sets the limit of documents returned in the query.\r\n     */\r\n    limit?: number;\r\n\r\n    /**\r\n     * Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\r\n     */\r\n    sort?: Array<any> | Object;\r\n\r\n    /**\r\n     * The fields to return in the query. Object of fields to include or exclude (not both), {'a':1}.\r\n     */\r\n    fields?: Object;\r\n\r\n    /**\r\n     * Set to skip N documents ahead in your query (useful for pagination).\r\n     */\r\n    skip?: number;\r\n\r\n    /**\r\n     * Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}.\r\n     */\r\n    hint?: Object;\r\n\r\n    /**\r\n     * Explain the query instead of returning the data.\r\n     */\r\n    explain?: boolean;\r\n\r\n    /**\r\n     * Snapshot query.\r\n     */\r\n    snapshot?: boolean;\r\n\r\n    /**\r\n     * Specify if the cursor can timeout.\r\n     */\r\n    timeout?: boolean;\r\n\r\n    /**\r\n     * Specify if the cursor is tailable.\r\n     */\r\n    tailable?: boolean;\r\n\r\n    /**\r\n     * Set the batchSize for the getMoreCommand when iterating over the query results.\r\n     */\r\n    batchSize?: number;\r\n\r\n    /**\r\n     * Only return the index key.\r\n     */\r\n    returnKey?: boolean;\r\n\r\n    /**\r\n     * Limit the number of items to scan.\r\n     */\r\n    maxScan?: number;\r\n\r\n    /**\r\n     * Set index bounds.\r\n     */\r\n    min?: number;\r\n\r\n    /**\r\n     * Set index bounds.\r\n     */\r\n    max?: number;\r\n\r\n    /**\r\n     * Show disk location of results.\r\n     */\r\n    showDiskLoc?: boolean;\r\n\r\n    /**\r\n     * You can put a $comment field on a query to make looking in the profiler logs simpler.\r\n     */\r\n    comment?: string;\r\n\r\n    /**\r\n     * Return document results as raw BSON buffers.\r\n     */\r\n    raw?: boolean;\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n\r\n    /**\r\n     * Specify if the cursor should return partial results when querying against a sharded system.\r\n     */\r\n    partial?: boolean;\r\n\r\n    /**\r\n     * Number of milliseconds to wait before aborting the query.\r\n     */\r\n    maxTimeMs?: number;\r\n}\r\n\r\n/**\r\n * InsertWriteOpResult.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#~insertWriteOpResult\r\n */\r\nexport interface InsertWriteOpResult {\r\n\r\n    /**\r\n     * The total amount of documents inserted.\r\n     */\r\n    insertedCount: number;\r\n\r\n    /**\r\n     * All the documents inserted using insertOne/insertMany/replaceOne.\r\n     * Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany.\r\n     */\r\n    ops: Array<any>;\r\n\r\n    /**\r\n     * All the generated _id's for the inserted documents.\r\n     */\r\n    insertedIds: Array<ObjectID>;\r\n\r\n    /**\r\n     * The connection object used for the operation.\r\n     */\r\n    connection: any;\r\n\r\n    /**\r\n     * The raw command result object returned from MongoDB (content might vary by server version).\r\n     * @param ok Is 1 if the command executed correctly.\r\n     * @param n The total count of documents inserted.\r\n     */\r\n    result: { ok: number, n: number };\r\n}\r\n\r\n/**\r\n * CollectionInsertOneOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#insertOne\r\n */\r\nexport interface CollectionInsertOneOptions {\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * Serialize functions on any object.\r\n     */\r\n    serializeFunctions?: boolean;\r\n\r\n    /**\r\n     * Force server to assign _id values instead of driver.\r\n     */\r\n    forceServerObjectId?: boolean;\r\n\r\n    /**\r\n     * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\r\n     */\r\n    bypassDocumentValidation?: boolean;\r\n}\r\n\r\n/**\r\n * InsertOneWriteOpResult.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#~insertOneWriteOpResult\r\n */\r\nexport interface InsertOneWriteOpResult {\r\n\r\n    /**\r\n     * The total amount of documents inserted.\r\n     */\r\n    insertedCount: number;\r\n\r\n    /**\r\n     * All the documents inserted using insertOne/insertMany/replaceOne.\r\n     * Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany.\r\n     */\r\n    ops: Array<any>;\r\n\r\n    /**\r\n     * The driver generated ObjectId for the insert operation.\r\n     */\r\n    insertedId: ObjectID;\r\n\r\n    /**\r\n     * The connection object used for the operation.\r\n     */\r\n    connection: any;\r\n\r\n    /**\r\n     * The raw command result object returned from MongoDB (content might vary by server version).\r\n     * @param ok Is 1 if the command executed correctly.\r\n     * @param n The total count of documents inserted.\r\n     */\r\n    result: { ok: number, n: number };\r\n}\r\n\r\n/**\r\n * ParallelCollectionScanOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#parallelCollectionScan\r\n */\r\nexport interface ParallelCollectionScanOptions {\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n\r\n    /**\r\n     * Set the batchSize for the getMoreCommand when iterating over the query results.\r\n     */\r\n    batchSize?: number;\r\n\r\n    /**\r\n     * The maximum number of parallel command cursors to return (the number of returned cursors will be in the range 1:numCursors).\r\n     */\r\n    numCursors?: number;\r\n\r\n    /**\r\n     * Return all BSON documents as Raw Buffer documents.\r\n     */\r\n    raw?: boolean;\r\n}\r\n\r\n/**\r\n * ParallelCollectionScanOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#replaceOne\r\n */\r\nexport interface ReplaceOneOptions {\r\n\r\n    /**\r\n     * Update operation is an upsert.\r\n     */\r\n    upsert?: boolean;\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number | string;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * Specify a journal write concern.\r\n     */\r\n    j?: boolean;\r\n\r\n    /**\r\n     * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\r\n     */\r\n    bypassDocumentValidation?: boolean;\r\n}\r\n\r\n/**\r\n * ParallelCollectionScanOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#~updateWriteOpResult\r\n */\r\nexport interface UpdateWriteOpResult {\r\n\r\n    /**\r\n     * The raw result returned from MongoDB, field will vary depending on server version.\r\n     * @param ok Is 1 if the command executed correctly.\r\n     * @param n The total count of documents scanned.\r\n     * @param nModified The total count of documents modified.\r\n     */\r\n    result: { ok: number, n: number, nModified: number };\r\n\r\n    /**\r\n     * The connection object used for the operation.\r\n     */\r\n    connection: any;\r\n\r\n    /**\r\n     * The number of documents that matched the filter.\r\n     */\r\n    matchedCount: number;\r\n\r\n    /**\r\n     * The number of documents that were modified.\r\n     */\r\n    modifiedCount: number;\r\n\r\n    /**\r\n     * The number of documents upserted.\r\n     */\r\n    upsertedCount: number;\r\n\r\n    /**\r\n     * The upserted id.\r\n     * @param _id The upserted _id returned from the server.\r\n     */\r\n    upsertedId: { _id: ObjectID };\r\n}\r\n\r\n/**\r\n * ParallelCollectionScanOptions.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#mapReduce\r\n */\r\nexport interface MapReduceOptions {\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n\r\n    /**\r\n     * Sets the output target for the map reduce job.\r\n     * {inline:1} | {replace:'collectionName'} | {merge:'collectionName'} | {reduce:'collectionName'}.\r\n     */\r\n    out?: Object;\r\n\r\n    /**\r\n     * Query filter object.\r\n     */\r\n    query?: Object;\r\n\r\n    /**\r\n     * Sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces.\r\n     */\r\n    sort?: Object;\r\n\r\n    /**\r\n     * Number of objects to return from collection.\r\n     */\r\n    limit?: number;\r\n\r\n    /**\r\n     * Keep temporary data.\r\n     */\r\n    keeptemp?: boolean;\r\n\r\n    /**\r\n     * Finalize function.\r\n     */\r\n    finalize?: Function | string;\r\n\r\n    /**\r\n     * Can pass in variables that can be access from map/reduce/finalize.\r\n     */\r\n    scope?: Object;\r\n\r\n    /**\r\n     * It is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X.\r\n     */\r\n    jsMode?: boolean;\r\n\r\n    /**\r\n     * Provide statistics on job execution time.\r\n     */\r\n    verbose?: boolean;\r\n\r\n    /**\r\n     * Allow driver to bypass schema validation in MongoDB 3.2 or higher.\r\n     */\r\n    bypassDocumentValidation?: boolean;\r\n}\r\n\r\n/**\r\n * WriteOpResult.\r\n *\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Collection.html#~WriteOpResult\r\n */\r\nexport interface WriteOpResult {\r\n\r\n    /**\r\n     * All the documents inserted using insertOne/insertMany/replaceOne.\r\n     * Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany.\r\n     */\r\n    ops: Array<any>;\r\n\r\n    /**\r\n     * The connection object used for the operation.\r\n     */\r\n    connection: any;\r\n\r\n    /**\r\n     * The command result object.\r\n     */\r\n    result: any;\r\n}\r\n\r\n/**\r\n * WriteOpResult.\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#~resultCallback\r\n */\r\nexport type CursorResult = any | void | boolean;\r\n\r\n/**\r\n * Creates a new Cursor instance (INTERNAL TYPE, do not instantiate directly).\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html\r\n */\r\nexport declare class Cursor<T> extends Readable {\r\n\r\n    /**\r\n     * Cursor query sort setting.\r\n     */\r\n    sortValue: string;\r\n\r\n    /**\r\n     * Is Cursor able to time out.\r\n     */\r\n    timeout: boolean;\r\n\r\n    /**\r\n     * Get cursor ReadPreference.\r\n     */\r\n    readPreference: ReadPreference;\r\n\r\n    /**\r\n     * @param flag The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial'].\r\n     * @param value The flag boolean value.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#addCursorFlag\r\n     */\r\n    addCursorFlag(flag: string, value: boolean): Cursor<T>;\r\n\r\n    /**\r\n     * @param name The query modifier (must start with $, such as $orderby etc).\r\n     * @param value The flag boolean value.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#addQueryModifier\r\n     */\r\n    addQueryModifier(name: string, value: boolean): Cursor<T>;\r\n\r\n    /**\r\n     * @param value The batchSize for the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#batchSize\r\n     */\r\n    batchSize(value: number): Cursor<T>;\r\n\r\n    /**\r\n     * Clone the cursor.\r\n     * still returns the same type.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#clone\r\n     */\r\n    clone(): Cursor<T>;\r\n\r\n    /**\r\n     * Close the cursor, sending a KillCursor command and emitting close.\r\n     * The result callback.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#close\r\n     */\r\n    close(): Promise<CursorResult>;\r\n    close(callback: MongoCallback<CursorResult>): void;\r\n\r\n    /**\r\n     * Add a comment to the cursor query allowing for tracking the comment in the log.\r\n     * @param value The comment attached to this query.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#comment\r\n     */\r\n    comment(value: string): Cursor<T>;\r\n\r\n    /**\r\n     * Get the count of documents for this cursor.\r\n     * @param applySkipLimit Should the count command apply limit and skip settings on the cursor or in the passed in options.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#count\r\n     */\r\n    count(applySkipLimit: boolean, callback: MongoCallback<number>): void;\r\n\r\n    /**\r\n     * Get the count of documents for this cursor.\r\n     * @param applySkipLimit Should the count command apply limit and skip settings on the cursor or in the passed in options.\r\n     * @param options Optional settings.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#count\r\n     */\r\n    count(applySkipLimit: boolean, options?: CursorCommentOptions): Promise<number>;\r\n\r\n    /**\r\n     * Get the count of documents for this cursor.\r\n     * @param applySkipLimit Should the count command apply limit and skip settings on the cursor or in the passed in options.\r\n     * @param options Optional settings.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#count\r\n     */\r\n    count(applySkipLimit: boolean, options: CursorCommentOptions, callback: MongoCallback<number>): void;\r\n\r\n    /**\r\n     * Execute the explain for the cursor.\r\n     * returns Promise if no callback passed.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#explain\r\n     */\r\n    explain(): Promise<CursorResult>;\r\n\r\n    /**\r\n     * Execute the explain for the cursor.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#explain\r\n     */\r\n    explain(callback: MongoCallback<CursorResult>): void;\r\n\r\n    /**\r\n     * Set the cursor query.\r\n     * @param filter The filter object used for the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#filter\r\n     */\r\n    filter(filter: Object): Cursor<T>;\r\n\r\n    /**\r\n     * Iterates over all the documents for this cursor using the iterator, callback pattern.\r\n     * @param iterator The iteration callback.\r\n     * @param callback The end callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#forEach\r\n     */\r\n    forEach(iterator: IteratorCallback<T>, callback: EndCallback): void;\r\n\r\n    /**\r\n     * Check if there is any document still available in the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#hasNext\r\n     */\r\n    hasNext(): Promise<boolean>;\r\n\r\n    /**\r\n     * Check if there is any document still available in the cursor.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#hasNext\r\n     */\r\n    hasNext(callback: MongoCallback<boolean>): void;\r\n\r\n    /**\r\n     * Set the cursor hint.\r\n     * @param hint If specified, then the query system will only consider plans using the hinted index.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#hint\r\n     */\r\n    hint(hint: Object): Cursor<T>;\r\n\r\n    /**\r\n     * Is the cursor closed.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#isClosed\r\n     */\r\n    isClosed(): boolean;\r\n\r\n    /**\r\n     * Set the limit for the cursor.\r\n     * @param value The limit for the cursor query.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#limit\r\n     */\r\n    limit(value: number): Cursor<T>;\r\n\r\n    /**\r\n     * SMap all documents using the provided function.\r\n     * @param transform The mapping transformation method.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#map\r\n     */\r\n    map(transform: Function): Cursor<T>;\r\n\r\n    /**\r\n     * Set the cursor max.\r\n     * @param max Specify a $max value to specify the exclusive upper bound for a specific index in\r\n     * order to constrain the results of find(). The $max specifies the upper bound for\r\n     * all keys of a specific index in order.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#max\r\n     */\r\n    max(max: number): Cursor<T>;\r\n\r\n    /**\r\n     * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the\r\n     * timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise).\r\n     * @param value Number of milliseconds to wait before aborting the tailed query.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#maxAwaitTimeMS\r\n     */\r\n    maxAwaitTimeMS(value: number): Cursor<T>;\r\n\r\n    /**\r\n     * Set the cursor maxScan.\r\n     * @param maxScan Constrains the query to only scan the specified number of documents when fulfilling the query.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#maxScan\r\n     */\r\n    maxScan(maxScan: Object): Cursor<T>;\r\n\r\n    /**\r\n     * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher).\r\n     * @param value Number of milliseconds to wait before aborting the query.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#maxTimeMS\r\n     */\r\n    maxTimeMS(value: number): Cursor<T>;\r\n\r\n    /**\r\n     * Set the cursor min.\r\n     * @param min Specify a $min value to specify the inclusive lower bound for a specific index in order to\r\n     * constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#min\r\n     */\r\n    min(min: number): Cursor<T>;\r\n\r\n    /**\r\n     * Get the next available document from the cursor, returns null if no more documents are available.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#next\r\n     */\r\n    next(): Promise<CursorResult>;\r\n\r\n    /**\r\n     * Get the next available document from the cursor, returns null if no more documents are available.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#next\r\n     */\r\n    next(callback: MongoCallback<CursorResult>): void;\r\n\r\n    /**\r\n     * Sets a field projection for the query.\r\n     * @param value The field projection object.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#project\r\n     */\r\n    project(value: Object): Cursor<T>;\r\n\r\n    /**\r\n     * The read() method pulls some data out of the internal buffer and returns it.\r\n     * If there is no data available, then it will return null.\r\n     * @param size Optional argument to specify how much data to read.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#read\r\n     */\r\n    read(size: number): string | Buffer | void;\r\n\r\n    /**\r\n     * Set the cursor returnKey.\r\n     * @param returnKey Only return the index field or fields for the results of the query. If $returnKey is set\r\n     * to true and the query does not use an index to perform the read operation,\r\n     * the returned documents will not contain any fields. Use one of the following forms:\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#next\r\n     */\r\n    returnKey(returnKey: Object): Cursor<T>;\r\n\r\n    /**\r\n     * Resets the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#rewind\r\n     */\r\n    rewind(): void;\r\n\r\n    /**\r\n     * Set a node.js specific cursor option.\r\n     * @param field The cursor option to set ['numberOfRetries', 'tailableRetryInterval'].\r\n     * @param value The field value.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#setCursorOption\r\n     */\r\n    setCursorOption(field: string, value: Object): Cursor<T>;\r\n\r\n    /**\r\n     * Set the ReadPreference for the cursor.\r\n     * @param readPreference The new read preference for the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#setReadPreference\r\n     */\r\n    setReadPreference(readPreference: string | ReadPreference): Cursor<T>;\r\n\r\n    /**\r\n     * Set the cursor showRecordId.\r\n     * @param showRecordId The $showDiskLoc option has now been deprecated and replaced with the\r\n     * showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#showRecordId\r\n     */\r\n    showRecordId(showRecordId: Object): Cursor<T>;\r\n\r\n    /**\r\n     * Set the skip for the cursor.\r\n     * @param value The skip for the cursor query.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#skip\r\n     */\r\n    skip(value: number): Cursor<T>;\r\n\r\n    /**\r\n     * Set the cursor snapshot.\r\n     * @param snapshot The $snapshot operator prevents the cursor from returning a document more than\r\n     * once because an intervening write operation results in a move of the document.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#snapshot\r\n     */\r\n    snapshot(snapshot: Object): Cursor<T>;\r\n\r\n    /**\r\n     * Sets the sort order of the cursor query.\r\n     * @param keyOrList The key or keys set for the sort.\r\n     * @param direction The direction of the sorting (1 or -1).\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#sort\r\n     */\r\n    sort(keyOrList: string | Object[] | Object, direction?: number): Cursor<T>;\r\n\r\n    /**\r\n     * Return a modified Readable stream including a possible transform method.\r\n     * @param options Optional settings.\r\n     * @param transform A transformation method applied to each document emitted by the stream.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#stream\r\n     */\r\n    stream(options?: { transform?: Function }): Cursor<T>;\r\n\r\n    /**\r\n     * Returns an array of documents. The caller is responsible for making sure that there is enough\r\n     * memory to store the results. Note that the array only contain partial results when this cursor had\r\n     * been previously accessed. In that case, cursor.rewind() can be used to reset the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#toArray\r\n     */\r\n    toArray(): Promise<T[]>;\r\n\r\n    /**\r\n     * Returns an array of documents. The caller is responsible for making sure that there is enough\r\n     * memory to store the results. Note that the array only contain partial results when this cursor had\r\n     * been previously accessed. In that case, cursor.rewind() can be used to reset the cursor.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#toArray\r\n     */\r\n    toArray(callback: MongoCallback<T[]>): void;\r\n\r\n    /**\r\n     * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some\r\n     * data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\r\n     * @param stream Chunk of data to unshift onto the read queue.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#unshift\r\n     */\r\n    unshift(stream: Buffer | string): void;\r\n}\r\n\r\n/**\r\n * Get the count of documents for this cursor.\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#count\r\n */\r\nexport interface CursorCommentOptions {\r\n\r\n    /**\r\n     * The number of documents to skip.\r\n     */\r\n    skip?: number;\r\n\r\n    /**\r\n     * The maximum amounts to count before aborting.\r\n     */\r\n    limit?: number;\r\n\r\n    /**\r\n     * Number of miliseconds to wait before aborting the query.\r\n     */\r\n    maxTimeMS?: number;\r\n\r\n    /**\r\n     * An index name hint for the query.\r\n     */\r\n    hint?: string;\r\n\r\n    /**\r\n     * The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED,\r\n     * ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\r\n     */\r\n    readPreference?: ReadPreference | string;\r\n}\r\n\r\n/**\r\n * The callback format for the forEach iterator method.\r\n * @param doc An emitted document for the iterator.\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#~iteratorCallback\r\n */\r\nexport interface IteratorCallback<T> {\r\n    (doc: T): void;\r\n}\r\n\r\n/**\r\n * The callback error format for the forEach iterator method.\r\n * @param error An error instance representing the error during the execution.\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#~endCallback\r\n */\r\nexport interface EndCallback {\r\n    (error: MongoError): void;\r\n}\r\n\r\n/**\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#~resultCallback\r\n */\r\nexport type AggregationCursorResult = any | void;\r\n\r\n/**\r\n * Creates a new Aggregation Cursor instance (INTERNAL TYPE, do not instantiate directly),\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html\r\n */\r\nexport interface AggregationCursor<T> extends Readable {\r\n\r\n    /**\r\n     * Set the batch size for the cursor.\r\n     * @param value The batchSize for the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#batchSize\r\n     */\r\n    batchSize(value: number): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Clone the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#clone\r\n     */\r\n    clone(): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Close the cursor, sending a AggregationCursor command and emitting close.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#close\r\n     */\r\n    close(): Promise<AggregationCursorResult>;\r\n\r\n    /**\r\n     * Close the cursor, sending a AggregationCursor command and emitting close.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#close\r\n     */\r\n    close(callback: MongoCallback<AggregationCursorResult>): void;\r\n\r\n    /**\r\n     * Iterates over all the documents for this cursor. As with {cursor.toArray}, not all of the elements will\r\n     * be iterated if this cursor had been previouly accessed. In that case, {cursor.rewind} can be used to reset\r\n     * the cursor. However, unlike {cursor.toArray}, the cursor will only hold a maximum of batch size elements\r\n     * at any given time if batch size is specified. Otherwise, the caller is responsible for making sure\r\n     * that the entire result can fit the memory.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#each\r\n     */\r\n    each(callback: MongoCallback<AggregationCursorResult>): void;\r\n\r\n    /**\r\n     * Execute the explain for the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#explain\r\n     */\r\n    explain(): Promise<AggregationCursorResult>;\r\n\r\n    /**\r\n     * Execute the explain for the cursor.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#explain\r\n     */\r\n    explain(callback: MongoCallback<AggregationCursorResult>): void;\r\n\r\n    /**\r\n     * Add a geoNear stage to the aggregation pipeline.\r\n     * @param document The geoNear stage document.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#geoNear\r\n     */\r\n    geoNear(document: Object): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Add a group stage to the aggregation pipeline.\r\n     * @param document The group stage document.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#group\r\n     */\r\n    group(document: Object): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Is the cursor closed.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#isClosed\r\n     */\r\n    isClosed(): boolean;\r\n\r\n    /**\r\n     * Add a limit stage to the aggregation pipeline.\r\n     * @param value The state limit value.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#limit\r\n     */\r\n    limit(value: number): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Add a match stage to the aggregation pipeline.\r\n     * @param document The match stage document.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#match\r\n     */\r\n    match(document: Object): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Add a maxTimeMS stage to the aggregation pipeline.\r\n     * @param value The state maxTimeMS value.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#maxTimeMS\r\n     */\r\n    maxTimeMS(value: number): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Get the next available document from the cursor, returns null if no more documents are available.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#next\r\n     */\r\n    next(): Promise<AggregationCursorResult>;\r\n\r\n    /**\r\n     * Get the next available document from the cursor, returns null if no more documents are available.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#next\r\n     */\r\n    next(callback: MongoCallback<AggregationCursorResult>): void;\r\n\r\n    /**\r\n     * Add a out stage to the aggregation pipeline.\r\n     * @param destination The destination name.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#out\r\n     */\r\n    out(destination: string): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Add a project stage to the aggregation pipeline.\r\n     * @param document The project stage document.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#project\r\n     */\r\n    project(document: Object): AggregationCursor<T>;\r\n\r\n    /**\r\n     * The read() method pulls some data out of the internal buffer and returns it.\r\n     * If there is no data available, then it will return null.\r\n     * @param size Optional argument to specify how much data to read.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#read\r\n     */\r\n    read(size: number): string | Buffer | void;\r\n\r\n    /**\r\n     * Add a redact stage to the aggregation pipeline.\r\n     * @param document The redact stage document.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#redact\r\n     */\r\n    redact(document: Object): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Resets the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#rewind\r\n     */\r\n    rewind(): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Add a skip stage to the aggregation pipeline.\r\n     * @param value The state skip value.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#setEncoding\r\n     */\r\n    skip(value: number): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Add a sort stage to the aggregation pipeline.\r\n     * @param document The sort stage document.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#sort\r\n     */\r\n    sort(document: Object): AggregationCursor<T>;\r\n\r\n    /**\r\n     * Returns an array of documents. The caller is responsible for making sure that there\r\n     * is enough memory to store the results. Note that the array only contain partial\r\n     * results when this cursor had been previouly accessed. In that case,\r\n     * cursor.rewind() can be used to reset the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#toArray\r\n     */\r\n    toArray(): Promise<T[]>;\r\n\r\n    /**\r\n     * Returns an array of documents. The caller is responsible for making sure that there\r\n     * is enough memory to store the results. Note that the array only contain partial\r\n     * results when this cursor had been previouly accessed. In that case,\r\n     * cursor.rewind() can be used to reset the cursor.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#toArray\r\n     */\r\n    toArray(callback: MongoCallback<T[]>): void;\r\n\r\n    /**\r\n     * This is useful in certain cases where a stream is being consumed by a parser,\r\n     * which needs to \"un-consume\" some data that it has optimistically pulled out of the source,\r\n     * so that the stream can be passed on to some other party.\r\n     * @param stream Chunk of data to unshift onto the read queue.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#unshift\r\n     */\r\n    unshift(stream: Buffer | string): void;\r\n\r\n    /**\r\n     * Add a unwind stage to the aggregation pipeline.\r\n     * @param field The unwind field name.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/AggregationCursor.html#unwind\r\n     */\r\n    unwind(field: string): AggregationCursor<T>;\r\n}\r\n\r\n/**\r\n * CommandCursor.\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html\r\n */\r\nexport interface CommandCursor extends Readable {\r\n\r\n    /**\r\n     * Set the batch size for the cursor.\r\n     * @param value The batchSize for the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#batchSize\r\n     */\r\n    batchSize(value: number): CommandCursor;\r\n\r\n    /**\r\n     * Clone the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#clone\r\n     */\r\n    clone(): CommandCursor;\r\n\r\n    /**\r\n     * Close the cursor, sending a KillCursor command and emitting close.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#close\r\n     */\r\n    close(): Promise<AggregationCursorResult>;\r\n\r\n    /**\r\n     * Close the cursor, sending a KillCursor command and emitting close.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#close\r\n     */\r\n    close(callback: MongoCallback<AggregationCursorResult>): void;\r\n\r\n    /**\r\n     * Each\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#each\r\n     */\r\n    each(callback: MongoCallback<AggregationCursorResult>): void;\r\n\r\n    /**\r\n     * Is the cursor closed.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#isClosed\r\n     */\r\n    isClosed(): boolean;\r\n\r\n    /**\r\n     * Add a maxTimeMS stage to the aggregation pipeline.\r\n     * @param value The state maxTimeMS value.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#maxTimeMS\r\n     */\r\n    maxTimeMS(value: number): CommandCursor;\r\n\r\n    /**\r\n     * Get the next available document from the cursor, returns null if no more documents are available.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#next\r\n     */\r\n    next(): Promise<AggregationCursorResult>;\r\n\r\n    /**\r\n     * Get the next available document from the cursor, returns null if no more documents are available.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#next\r\n     */\r\n    next(callback: MongoCallback<AggregationCursorResult>): void;\r\n\r\n    /**\r\n     * The read() method pulls some data out of the internal buffer and returns it.\r\n     * If there is no data available, then it will return null.\r\n     * @param size Optional argument to specify how much data to read.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#read\r\n     */\r\n    read(size: number): string | Buffer | void;\r\n\r\n    /**\r\n     * Resets the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#rewind\r\n     */\r\n    rewind(): CommandCursor;\r\n\r\n    /**\r\n     * Set the ReadPreference for the cursor.\r\n     * @param readPreference The new read preference for the cursor.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#setReadPreference\r\n     */\r\n    setReadPreference(readPreference: string | ReadPreference): CommandCursor;\r\n\r\n    /**\r\n     * Returns an array of documents. The caller is responsible for making sure that there is enough memory\r\n     * to store the results. Note that the array only contain partial results when this cursor had been previouly accessed.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#toArray\r\n     */\r\n    toArray(): Promise<any[]>;\r\n\r\n    /**\r\n     * Returns an array of documents. The caller is responsible for making sure that there is enough memory\r\n     * to store the results. Note that the array only contain partial results when this cursor had been previouly accessed.\r\n     * @param callback The result callback.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#toArray\r\n     */\r\n    toArray(callback: MongoCallback<any[]>): void;\r\n\r\n    /**\r\n     * This is useful in certain cases where a stream is being consumed by a parser,\r\n     * which needs to \"un-consume\" some data that it has optimistically pulled out of the source,\r\n     * so that the stream can be passed on to some other party.\r\n     * @param stream Chunk of data to unshift onto the read queue.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/CommandCursor.html#unshift\r\n     */\r\n    unshift(stream: Buffer | string): void;\r\n}\r\n\r\n/**\r\n * GridFSBucket.\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html\r\n */\r\nexport declare class GridFSBucket {\r\n\r\n    /**\r\n     *\r\n     * @param db A db handle.\r\n     * @param options Optional settings.\r\n     */\r\n    constructor(db: Db, options?: GridFSBucketOptions);\r\n\r\n    /**\r\n     * Deletes a file with the given id.\r\n     * @param id The id of the file doc\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html#delete\r\n     */\r\n    delete(id: ObjectID, callback?: GridFSBucketErrorCallback): void;\r\n\r\n    /**\r\n     * Removes this bucket's files collection, followed by its chunks collection.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html#drop\r\n     */\r\n    drop(callback?: GridFSBucketErrorCallback): void;\r\n\r\n    /**\r\n     * Convenience wrapper around find on the files collection\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html#find\r\n     */\r\n    find(filter?: Object, options?: GridFSBucketFindOptions): Cursor<any>;\r\n\r\n    /**\r\n     * Returns a readable stream (GridFSBucketReadStream) for streaming file.\r\n     * @param id The id of the file doc.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html#openDownloadStream\r\n     */\r\n    openDownloadStream(id: ObjectID, options?: { start: number, end: number }): GridFSBucketReadStream;\r\n\r\n    /**\r\n     * Returns a readable stream (GridFSBucketReadStream) for streaming file\r\n     * @param filename The id of the file doc\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html#openDownloadStreamByName\r\n     */\r\n\r\n    openDownloadStreamByName(filename: string, options?: { revision: number, start: number, end: number }): GridFSBucketReadStream;\r\n\r\n    /**\r\n     * Returns a writable stream (GridFSBucketWriteStream) for writing buffers to GridFS.\r\n     * The stream's 'id' property contains the resulting file's id.\r\n     * @param filename The value of the 'filename' key in the files doc.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html#openUploadStream\r\n     */\r\n    openUploadStream(filename: string, options?: GridFSBucketOpenUploadStreamOptions): GridFSBucketWriteStream;\r\n\r\n    /**\r\n     * Returns a writable stream (GridFSBucketWriteStream) for writing buffers to GridFS for a custom file id.\r\n     * The stream's 'id' property contains the resulting file's id.\r\n     * @param id A custom id used to identify the file.\r\n     * @param filename The value of the 'filename' key in the files doc.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html#openUploadStreamWithId\r\n     */\r\n    openUploadStreamWithId(id: string | number | Object, filename: string, options?: GridFSBucketOpenUploadStreamOptions): GridFSBucketWriteStream;\r\n\r\n    /**\r\n     * Renames the file with the given _id to the given string.\r\n     * @param id the id of the file to rename.\r\n     * @param filename new name for the file.\r\n     * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html#rename\r\n     */\r\n    rename(id: ObjectID, filename: string, callback?: GridFSBucketErrorCallback): void;\r\n}\r\n\r\n/**\r\n * Constructor for a streaming GridFS interface.\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html\r\n */\r\nexport interface GridFSBucketOptions {\r\n\r\n    /**\r\n     * The 'files' and 'chunks' collections will be prefixed with the bucket name followed by a dot.\r\n     */\r\n    bucketName?: string;\r\n\r\n    /**\r\n     * Number of bytes stored in each chunk. Defaults to 255KB.\r\n     */\r\n    chunkSizeBytes?: number;\r\n\r\n    /**\r\n     * Optional write concern to be passed to write operations, for instance { w: 1 }.\r\n     */\r\n    writeConcern?: Object;\r\n\r\n    /**\r\n     * Optional read preference to be passed to read operations.\r\n     */\r\n    ReadPreference?: Object;\r\n}\r\n\r\n/**\r\n * GridFSBucketErrorCallback.\r\n * @param err An error instance representing any errors that occurred.\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html#~errorCallback\r\n */\r\nexport interface GridFSBucketErrorCallback {\r\n    (err?: MongoError): void;\r\n}\r\n\r\n/**\r\n * GridFSBucketFindOptions.\r\n * @see http://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html#find\r\n */\r\nexport interface GridFSBucketFindOptions {\r\n\r\n    /**\r\n     * Optional batch size for cursor.\r\n     */\r\n    batchSize?: number;\r\n\r\n    /**\r\n     * Optional limit for cursor.\r\n     */\r\n    limit?: number;\r\n\r\n    /**\r\n     * Optional maxTimeMS for cursor.\r\n     */\r\n    maxTimeMS?: number;\r\n\r\n    /**\r\n     * Optionally set cursor's noCursorTimeout flag.\r\n     */\r\n    noCursorTimeout?: boolean;\r\n\r\n    /**\r\n     * Optional skip for cursor.\r\n     */\r\n    skip?: number;\r\n\r\n    /**\r\n     * Optional sort for cursor.\r\n     */\r\n    sort?: Object;\r\n}\r\n\r\n/**\r\n * GridFSBucketOpenUploadStreamOptions.\r\n * @see https://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucket.html#openUploadStream\r\n */\r\nexport interface GridFSBucketOpenUploadStreamOptions {\r\n\r\n    /**\r\n     * Optional overwrite this bucket's chunkSizeBytes for this file.\r\n     */\r\n    chunkSizeBytes?: number;\r\n\r\n    /**\r\n     * Optional object to store in the file document's metadata field.\r\n     */\r\n    metadata?: Object;\r\n\r\n    /**\r\n     * Optional string to store in the file document's contentType field.\r\n     */\r\n    contentType?: string;\r\n\r\n    /**\r\n     * Optional array of strings to store in the file document's aliases field.\r\n     */\r\n    aliases?: Array<string>;\r\n}\r\n\r\n/**\r\n * GridFSBucketReadStream.\r\n * @see https://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucketReadStream.html\r\n */\r\nexport declare class GridFSBucketReadStream extends Readable {\r\n\r\n    /**\r\n     *\r\n     * @param chunks Handle for chunks collection.\r\n     * @param files Handle for files collection.\r\n     * @param readPreference The read preference to use.\r\n     * @param filter The query to use to find the file document.\r\n     * @param options Optional settings.\r\n     */\r\n    constructor(chunks: Collection, files: Collection, readPreference: Object, filter: Object, options?: GridFSBucketReadStreamOptions);\r\n}\r\n\r\n/**\r\n * GridFSBucketReadStreamOptions.\r\n * @see https://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucketReadStream.html\r\n */\r\nexport interface GridFSBucketReadStreamOptions {\r\n\r\n    /**\r\n     * Optional sort for the file find query.\r\n     */\r\n    sort?: number;\r\n\r\n    /**\r\n     * Optional skip for the file find query.\r\n     */\r\n    skip?: number;\r\n\r\n    /**\r\n     * Optional 0-based offset in bytes to start streaming from.\r\n     */\r\n    start?: number;\r\n\r\n    /**\r\n     * Optional 0-based offset in bytes to stop streaming before.\r\n     */\r\n    end?: number;\r\n}\r\n\r\n/**\r\n * GridFSBucketWriteStream\r\n * @see https://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucketWriteStream.html\r\n */\r\nexport declare class GridFSBucketWriteStream extends Writable {\r\n\r\n    /**\r\n     *\r\n     * @param bucket Handle for this stream's corresponding bucket.\r\n     * @param filename The value of the 'filename' key in the files doc.\r\n     * @param options Optional settings.\r\n     */\r\n    constructor(bucket: GridFSBucket, filename: string, options?: GridFSBucketWriteStreamOptions);\r\n}\r\n\r\n/**\r\n * GridFSBucketWriteStreamOptions.\r\n * @see https://mongodb.github.io/node-mongodb-native/2.1/api/GridFSBucketWriteStream.html\r\n */\r\nexport interface GridFSBucketWriteStreamOptions {\r\n\r\n    /**\r\n     * Custom file id for the GridFS file.\r\n     */\r\n    id?: string | number | Object;\r\n\r\n    /**\r\n     * The chunk size to use, in bytes.\r\n     */\r\n    chunkSizeBytes?: number;\r\n\r\n    /**\r\n     * The write concern.\r\n     */\r\n    w?: number;\r\n\r\n    /**\r\n     * The write concern timeout.\r\n     */\r\n    wtimeout?: number;\r\n\r\n    /**\r\n     * The journal write concern.\r\n     */\r\n    j?: number;\r\n}"],"sourceRoot":"../.."}