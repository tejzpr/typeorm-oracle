{"version":3,"sources":["../browser/src/platform/PlatformTools.ts"],"names":[],"mappings":"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","file":"PlatformTools.js","sourcesContent":["/**\r\n * Browser's implementation of the platform-specific tools.\r\n *\r\n * This file gonna replace PlatformTools for browser environment.\r\n * For node.js environment this class is not getting packaged.\r\n * Don't use methods of this class in the code, use PlatformTools methods instead.\r\n */\r\nexport class PlatformTools {\r\n\r\n    /**\r\n     * Type of the currently running platform.\r\n     */\r\n    static type: \"browser\"|\"node\" = \"browser\";\r\n\r\n    /**\r\n     * Gets global variable where global stuff can be stored.\r\n     */\r\n    static getGlobalVariable(): any {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Loads (\"require\"-s) given file or package.\r\n     * This operation only supports on node platform\r\n     */\r\n    static load(name: string): any {\r\n        if (this.type === \"browser\")\r\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: require(\"${name}\").`);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Normalizes given path. Does \"path.normalize\".\r\n     */\r\n    static pathNormalize(pathStr: string): string {\r\n        if (this.type === \"browser\")\r\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.normalize(\"${pathStr}\").`);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Gets file extension. Does \"path.extname\".\r\n     */\r\n    static pathExtname(pathStr: string): string {\r\n        if (this.type === \"browser\")\r\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.extname(\"${pathStr}\").`);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Resolved given path. Does \"path.resolve\".\r\n     */\r\n    static pathResolve(pathStr: string): string {\r\n        if (this.type === \"browser\")\r\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.resolve(\"${pathStr}\").`);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Synchronously checks if file exist. Does \"fs.existsSync\".\r\n     */\r\n    static fileExist(pathStr: string): boolean {\r\n        if (this.type === \"browser\")\r\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.existsSync(\"${pathStr}\").`);\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gets environment variable.\r\n     */\r\n    static getEnvVariable(name: string): any {\r\n        // if (this.type === \"browser\")\r\n        //     throw new Error(`This option/function is not supported in the browser environment. Failed operation: process.env[\"${name}\"].`);\r\n        return undefined;\r\n    }\r\n\r\n    static readFileSync(filename: string): any {\r\n        if (this.type === \"browser\")\r\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.readFileSync(\"${filename}\").`);\r\n        return null;\r\n    }\r\n    \r\n    static appendFileSync(filename: string, data: any) {\r\n        if (this.type === \"browser\")\r\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.appendFileSync(\"${filename}\").`);\r\n    }\r\n\r\n    static writeFile(path: string, data: any): Promise<void> {\r\n        if (this.type === \"browser\")\r\n            throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.writeFile(\"${path}\").`);\r\n        return Promise.reject(null);\r\n    }\r\n\r\n    /**\r\n     * Highlights sql string to be print in the console.\r\n     */\r\n    static highlightSql(sql: string) {\r\n        return sql;\r\n    }\r\n\r\n    /**\r\n     * Highlights json string to be print in the console.\r\n     */\r\n    static highlightJson(json: string) {\r\n        return json;\r\n    }\r\n\r\n    /**\r\n     * Logging functions needed by AdvancedConsoleLogger (but here without chalk)\r\n     */\r\n    static logInfo(prefix: string, info: any) {\r\n        console.info(prefix + \" \", info);\r\n    }\r\n\r\n    static logError(prefix: string, error: any) {\r\n        console.error(prefix + \" \", error);\r\n    }\r\n    \r\n    static logWarn(prefix: string, warning: any) {\r\n        console.warn(prefix + \" \", warning);\r\n    }\r\n    \r\n    static log(message: string) {\r\n        console.log(message);\r\n    }\r\n\r\n    static warn(message: string) {\r\n        return message;\r\n    }\r\n}\r\n\r\n/**\r\n * These classes are needed for stream operations or\r\n * in the mongodb driver. Both aren't supported in the browser.\r\n */\r\nexport class EventEmitter {}\r\n\r\nexport class Readable {}\r\n\r\nexport class Writable {}\r\n\r\nexport interface ReadStream {}\r\n\r\n/**\r\n * This loads a polyfill to enable Buffers in the browser.\r\n */\r\ninterface Window {\r\n    Buffer: any;\r\n}\r\n\r\ndeclare var window: Window;\r\nwindow.Buffer = require(\"buffer/\").Buffer;"],"sourceRoot":".."}