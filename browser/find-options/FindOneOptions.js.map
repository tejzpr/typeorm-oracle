{"version":3,"sources":["../browser/src/find-options/FindOneOptions.ts"],"names":[],"mappings":"","file":"FindOneOptions.js","sourcesContent":["import {JoinOptions} from \"./JoinOptions\";\r\nimport {ObjectLiteral} from \"../common/ObjectLiteral\";\r\nimport {FindConditions} from \"./FindConditions\";\r\n\r\n/**\r\n * Defines a special criteria to find specific entity.\r\n */\r\nexport interface FindOneOptions<Entity = any> {\r\n\r\n    /**\r\n     * Specifies what columns should be retrieved.\r\n     */\r\n    select?: (keyof Entity)[];\r\n\r\n    /**\r\n     * Simple condition that should be applied to match entities.\r\n     */\r\n    where?: FindConditions<Entity>|ObjectLiteral|string;\r\n\r\n    /**\r\n     * Indicates what relations of entity should be loaded (simplified left join form).\r\n     */\r\n    relations?: string[];\r\n\r\n    /**\r\n     * Specifies what relations should be loaded.\r\n     */\r\n    join?: JoinOptions;\r\n\r\n    /**\r\n     * Order, in which entities should be ordered.\r\n     */\r\n    order?: { [P in keyof Entity]?: \"ASC\"|\"DESC\"|1|-1 };\r\n\r\n    /**\r\n     * Enables or disables query result caching.\r\n     */\r\n    cache?: boolean | number | { id: any, milliseconds: number };\r\n\r\n    /**\r\n     * If sets to true then loads all relation ids of the entity and maps them into relation values (not relation objects).\r\n     * If array of strings is given then loads only relation ids of the given properties.\r\n     */\r\n    loadRelationIds?: boolean|{ relations?: string[], disableMixedMap?: boolean }; // todo: extract options into separate interface, reuse\r\n\r\n    /**\r\n     * Indicates if eager relations should be loaded or not.\r\n     * By default they are loaded when find methods are used.\r\n     */\r\n    loadEagerRelations?: boolean;\r\n\r\n}\r\n"],"sourceRoot":".."}