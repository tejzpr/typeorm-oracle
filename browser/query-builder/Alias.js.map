{"version":3,"sources":["../browser/src/query-builder/Alias.ts"],"names":[],"mappings":"AAEA;GACG;AACH;IAiBI,eAAY,KAAa;QACrB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE,CAAC,CAAC;IACrC,CAAC;IAID,sBAAI,yBAAM;aAAV;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChC,CAAC;;;OAAA;IAED,sBAAI,8BAAW;aAAf;YACI,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAI,2BAAQ;aAIZ;YACI,IAAI,CAAC,IAAI,CAAC,SAAS;gBACf,MAAM,IAAI,KAAK,CAAC,sDAAmD,IAAI,CAAC,IAAI,OAAG,CAAC,CAAC;YAErF,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;aATD,UAAa,QAAwB;YACjC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC9B,CAAC;;;OAAA;IASL,YAAC;AAAD,CA1CA,AA0CC,IAAA","file":"Alias.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\r\n\r\n/**\r\n */\r\nexport class Alias {\r\n\r\n    type: \"from\"|\"select\"|\"join\"|\"other\"; // todo: make something with \"other\"\r\n\r\n    name: string;\r\n\r\n    /**\r\n     * Table on which this alias is applied.\r\n     * Used only for aliases which select custom tables.\r\n     */\r\n    tablePath?: string;\r\n\r\n    /**\r\n     * If this alias is for sub query.\r\n     */\r\n    subQuery?: string;\r\n\r\n    constructor(alias?: Alias) {\r\n        Object.assign(this, alias || {});\r\n    }\r\n\r\n    private _metadata?: EntityMetadata;\r\n\r\n    get target(): Function|string {\r\n        return this.metadata.target;\r\n    }\r\n\r\n    get hasMetadata(): boolean {\r\n        return !!this._metadata;\r\n    }\r\n\r\n    set metadata(metadata: EntityMetadata) {\r\n        this._metadata = metadata;\r\n    }\r\n\r\n    get metadata(): EntityMetadata {\r\n        if (!this._metadata)\r\n            throw new Error(`Cannot get entity metadata for the given alias \"${this.name}\"`);\r\n\r\n        return this._metadata;\r\n    }\r\n\r\n}"],"sourceRoot":".."}