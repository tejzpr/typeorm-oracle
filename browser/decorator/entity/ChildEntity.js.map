{"version":3,"sources":["../browser/src/decorator/entity/ChildEntity.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,sBAAsB,EAAC,MAAM,QAAQ,CAAC;AAI9C;;GAEG;AACH,MAAM,sBAAsB,kBAAwB;IAChD,OAAO,UAAU,MAAgB;QAE7B,4BAA4B;QAC5B,sBAAsB,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;YACjC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,cAAc;SACF,CAAC,CAAC;QAExB,kDAAkD;QAClD,IAAI,kBAAkB,EAAE;YACpB,sBAAsB,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC;gBAC9C,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,kBAAkB;aACM,CAAC,CAAC;SACxC;IACL,CAAC,CAAC;AACN,CAAC","file":"ChildEntity.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../\";\r\nimport {TableMetadataArgs} from \"../../metadata-args/TableMetadataArgs\";\r\nimport {DiscriminatorValueMetadataArgs} from \"../../metadata-args/DiscriminatorValueMetadataArgs\";\r\n\r\n/**\r\n * Special type of the table used in the single-table inherited tables.\r\n */\r\nexport function ChildEntity(discriminatorValue?: any) {\r\n    return function (target: Function) {\r\n\r\n        // register a table metadata\r\n        getMetadataArgsStorage().tables.push({\r\n            target: target,\r\n            type: \"entity-child\",\r\n        } as TableMetadataArgs);\r\n\r\n        // register discriminator value if it was provided\r\n        if (discriminatorValue) {\r\n            getMetadataArgsStorage().discriminatorValues.push({\r\n                target: target,\r\n                value: discriminatorValue\r\n            } as DiscriminatorValueMetadataArgs);\r\n        }\r\n    };\r\n}\r\n"],"sourceRoot":"../.."}