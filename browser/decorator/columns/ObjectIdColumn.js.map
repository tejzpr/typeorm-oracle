{"version":3,"sources":["../browser/src/decorator/columns/ObjectIdColumn.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,sBAAsB,EAAC,MAAM,QAAQ,CAAC;AAG7D;;;GAGG;AACH,MAAM,yBAAyB,OAAuB;IAClD,OAAO,UAAU,MAAc,EAAE,YAAoB;QAEjD,kEAAkE;QAClE,IAAI,CAAC,OAAO;YAAE,OAAO,GAAG,EAAmB,CAAC;QAC5C,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI;YAAE,OAAO,CAAC,IAAI,GAAI,KAAK,CAAC;QAEzC,4CAA4C;QAC5C,sBAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAClC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE,OAAO;SACG,CAAC,CAAC;IAC7B,CAAC,CAAC;AACN,CAAC","file":"ObjectIdColumn.js","sourcesContent":["import {ColumnOptions, getMetadataArgsStorage} from \"../../\";\r\nimport {ColumnMetadataArgs} from \"../../metadata-args/ColumnMetadataArgs\";\r\n\r\n/**\r\n * Special type of column that is available only for MongoDB database.\r\n * Marks your entity's column to be an object id.\r\n */\r\nexport function ObjectIdColumn(options?: ColumnOptions): Function {\r\n    return function (object: Object, propertyName: string) {\r\n\r\n        // if column options are not given then create a new empty options\r\n        if (!options) options = {} as ColumnOptions;\r\n        options.primary = true;\r\n        if (!options.name) options.name =  \"_id\";\r\n\r\n        // create and register a new column metadata\r\n        getMetadataArgsStorage().columns.push({\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            mode: \"objectId\",\r\n            options: options\r\n        } as ColumnMetadataArgs);\r\n    };\r\n}\r\n"],"sourceRoot":"../.."}