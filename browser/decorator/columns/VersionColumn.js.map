{"version":3,"sources":["../browser/src/decorator/columns/VersionColumn.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,sBAAsB,EAAC,MAAM,QAAQ,CAAC;AAG7D;;;;GAIG;AACH,MAAM,wBAAwB,OAAuB;IACjD,OAAO,UAAU,MAAc,EAAE,YAAoB;QAEjD,sBAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;YAClC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,OAAO,IAAI,EAAE;SACH,CAAC,CAAC;IAC7B,CAAC,CAAC;AACN,CAAC","file":"VersionColumn.js","sourcesContent":["import {ColumnOptions, getMetadataArgsStorage} from \"../../\";\r\nimport {ColumnMetadataArgs} from \"../../metadata-args/ColumnMetadataArgs\";\r\n\r\n/**\r\n * This column will store a number - version of the entity.\r\n * Every time your entity will be persisted, this number will be increased by one -\r\n * so you can organize visioning and update strategies of your entity.\r\n */\r\nexport function VersionColumn(options?: ColumnOptions): Function {\r\n    return function (object: Object, propertyName: string) {\r\n\r\n        getMetadataArgsStorage().columns.push({\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            mode: \"version\",\r\n            options: options || {}\r\n        } as ColumnMetadataArgs);\r\n    };\r\n}\r\n\r\n"],"sourceRoot":"../.."}