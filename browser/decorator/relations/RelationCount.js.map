{"version":3,"sources":["../browser/src/decorator/relations/RelationCount.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,sBAAsB,EAAqB,MAAM,QAAQ,CAAC;AAGlE;;;;GAIG;AACH,MAAM,wBAA2B,QAAqC,EAAE,KAAc,EAAE,mBAA8E;IAClK,OAAO,UAAU,MAAc,EAAE,YAAoB;QAEjD,sBAAsB,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC;YACzC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,KAAK;YACZ,mBAAmB,EAAE,mBAAmB;SACd,CAAC,CAAC;IACpC,CAAC,CAAC;AACN,CAAC","file":"RelationCount.js","sourcesContent":["import {getMetadataArgsStorage, SelectQueryBuilder} from \"../../\";\r\nimport {RelationCountMetadataArgs} from \"../../metadata-args/RelationCountMetadataArgs\";\r\n\r\n/**\r\n * Holds a number of children in the closure table of the column.\r\n *\r\n * @deprecated Do not use this decorator, it may be removed in the future versions\r\n */\r\nexport function RelationCount<T>(relation: string|((object: T) => any), alias?: string, queryBuilderFactory?: (qb: SelectQueryBuilder<any>) => SelectQueryBuilder<any>): Function {\r\n    return function (object: Object, propertyName: string) {\r\n\r\n        getMetadataArgsStorage().relationCounts.push({\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            relation: relation,\r\n            alias: alias,\r\n            queryBuilderFactory: queryBuilderFactory\r\n        } as RelationCountMetadataArgs);\r\n    };\r\n}\r\n"],"sourceRoot":"../.."}