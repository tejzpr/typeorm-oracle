{"version":3,"sources":["../browser/src/persistence/tree/MaterializedPathSubjectExecutor.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;GAEG;AACH;IAEI,4EAA4E;IAC5E,cAAc;IACd,4EAA4E;IAE5E,yCAAsB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC9C,CAAC;IAED,4EAA4E;IAC5E,iBAAiB;IACjB,4EAA4E;IAE5E;;OAEG;IACG,gDAAM,GAAZ,UAAa,OAAgB;;;;;;wBAErB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,kBAAmB,CAAC,cAAc,CAAC,OAAO,CAAC,MAAO,CAAC,CAAC;wBAClF,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,MAAM,EAAE,sCAAsC;4BACxG,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC;wBAEtH,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;wBAErD,UAAU,GAAW,EAAE,CAAC;6BACxB,QAAQ,EAAR,wBAAQ;wBACK,qBAAM,IAAI,CAAC,WAAW,CAAC,OAAO;iCACtC,kBAAkB,EAAE;iCACpB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,GAAG,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,sBAAuB,CAAC,YAAY,EAAE,MAAM,CAAC;iCACzG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;iCAC1D,UAAU,CAAC,QAAQ,CAAC;iCACpB,SAAS,EAAE;iCACX,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,EAAnC,CAAmC,CAAC,EAAA;;wBANxD,UAAU,GAAG,SAM2C,CAAC;;;wBAGvD,gBAAgB,GAAG,OAAO,CAAC,QAAQ,CAAC,kBAAmB,CAAC,WAAW,CAAC,GAAG,CAAC,UAAA,UAAU;4BACpF,OAAO,UAAU,CAAC,gBAAiB,CAAC,cAAc,CAAC,OAAO,CAAC,gBAAiB,CAAC,CAAC;wBAClF,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAEb,qBAAM,IAAI,CAAC,WAAW,CAAC,OAAO;iCACzB,kBAAkB,EAAE;iCACpB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;iCAC/B,GAAG;gCACA,GAAC,OAAO,CAAC,QAAQ,CAAC,sBAAuB,CAAC,YAAY,IAAG,UAAU,GAAG,gBAAgB,GAAG,GAAG;oCAC9F;iCACD,KAAK,CAAC,OAAO,CAAC,UAAW,CAAC;iCAC1B,OAAO,EAAE,EAAA;;wBAPd,SAOc,CAAC;;;;;KAClB;IAEL,sCAAC;AAAD,CAjDA,AAiDC,IAAA","file":"MaterializedPathSubjectExecutor.js","sourcesContent":["import {Subject} from \"../Subject\";\r\nimport {QueryRunner} from \"../../query-runner/QueryRunner\";\r\n\r\n/**\r\n * Executes subject operations for materialized-path tree entities.\r\n */\r\nexport class MaterializedPathSubjectExecutor {\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Constructor\r\n    // -------------------------------------------------------------------------\r\n\r\n    constructor(protected queryRunner: QueryRunner) {\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Executes operations when subject is being inserted.\r\n     */\r\n    async insert(subject: Subject): Promise<void> {\r\n\r\n        let parent = subject.metadata.treeParentRelation!.getEntityValue(subject.entity!); // if entity was attached via parent\r\n        if (!parent && subject.parentSubject && subject.parentSubject.entity) // if entity was attached via children\r\n            parent = subject.parentSubject.insertedValueSet ? subject.parentSubject.insertedValueSet : subject.parentSubject.entity;\r\n\r\n        const parentId = subject.metadata.getEntityIdMap(parent);\r\n\r\n        let parentPath: string = \"\";\r\n        if (parentId) {\r\n            parentPath = await this.queryRunner.manager\r\n                .createQueryBuilder()\r\n                .select(subject.metadata.targetName + \".\" + subject.metadata.materializedPathColumn!.propertyPath, \"path\")\r\n                .from(subject.metadata.target, subject.metadata.targetName)\r\n                .whereInIds(parentId)\r\n                .getRawOne()\r\n                .then(result => result ? result[\"path\"] : undefined);\r\n        }\r\n\r\n        const insertedEntityId = subject.metadata.treeParentRelation!.joinColumns.map(joinColumn => {\r\n            return joinColumn.referencedColumn!.getEntityValue(subject.insertedValueSet!);\r\n        }).join(\"_\");\r\n\r\n        await this.queryRunner.manager\r\n            .createQueryBuilder()\r\n            .update(subject.metadata.target)\r\n            .set({\r\n                [subject.metadata.materializedPathColumn!.propertyPath]: parentPath + insertedEntityId + \".\"\r\n            })\r\n            .where(subject.identifier!)\r\n            .execute();\r\n    }\r\n\r\n}"],"sourceRoot":"../.."}