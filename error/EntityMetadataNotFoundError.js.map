{"version":3,"sources":["../../src/error/EntityMetadataNotFoundError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,kCAAsC;AAEtC;GACG;AACH;IAAiD,+CAAK;IAGlD,qCAAY,MAAyC;QAArD,YACI,iBAAO,SAWV;QAdD,UAAI,GAAG,wBAAwB,CAAC;QAI5B,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,2BAA2B,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,UAAkB,CAAC;QACvB,IAAI,MAAM,YAAY,oBAAY,EAAE;YAChC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;SACpC;aAAM,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;YACrC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;SAC5B;aAAM;YACH,UAAU,GAAG,MAAM,CAAC;SACvB;QACD,KAAI,CAAC,OAAO,GAAG,uBAAoB,UAAU,kBAAc,CAAC;;IAChE,CAAC;IAEL,kCAAC;AAAD,CAjBA,AAiBC,CAjBgD,KAAK,GAiBrD;AAjBY,kEAA2B","file":"EntityMetadataNotFoundError.js","sourcesContent":["import {EntitySchema} from \"../index\";\r\n\r\n/**\r\n */\r\nexport class EntityMetadataNotFoundError extends Error {\r\n    name = \"EntityMetadataNotFound\";\r\n\r\n    constructor(target: Function|EntitySchema<any>|string) {\r\n        super();\r\n        Object.setPrototypeOf(this, EntityMetadataNotFoundError.prototype);\r\n        let targetName: string;\r\n        if (target instanceof EntitySchema) {\r\n            targetName = target.options.name;\r\n        } else if (typeof target === \"function\") {\r\n            targetName = target.name;\r\n        } else {\r\n            targetName = target;\r\n        }\r\n        this.message = `No metadata for \"${targetName}\" was found.`;\r\n    }\r\n\r\n}"],"sourceRoot":".."}