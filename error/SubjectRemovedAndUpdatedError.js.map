{"version":3,"sources":["../../src/error/SubjectRemovedAndUpdatedError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA;;GAEG;AACH;IAAmD,iDAAK;IAGpD,uCAAY,OAAgB;QAA5B,YACI,iBAAO,SAIV;QAPD,UAAI,GAAG,+BAA+B,CAAC;QAInC,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,6BAA6B,CAAC,SAAS,CAAC,CAAC;QACrE,KAAI,CAAC,OAAO,GAAG,sBAAmB,OAAO,CAAC,QAAQ,CAAC,IAAI,gDAA4C;YAC/F,6HAA6H,CAAC;;IACtI,CAAC;IAEL,oCAAC;AAAD,CAVA,AAUC,CAVkD,KAAK,GAUvD;AAVY,sEAA6B","file":"SubjectRemovedAndUpdatedError.js","sourcesContent":["import {Subject} from \"../persistence/Subject\";\r\n\r\n/**\r\n * Thrown when same object is scheduled for remove and updation at the same time.\r\n */\r\nexport class SubjectRemovedAndUpdatedError extends Error {\r\n    name = \"SubjectRemovedAndUpdatedError\";\r\n\r\n    constructor(subject: Subject) {\r\n        super();\r\n        Object.setPrototypeOf(this, SubjectRemovedAndUpdatedError.prototype);\r\n        this.message = `Removed entity \"${subject.metadata.name}\" is also scheduled for update operation. ` +\r\n            `Make sure you are not updating and removing same object (note that update or remove may be executed by cascade operations).`;\r\n    }\r\n\r\n}"],"sourceRoot":".."}