{"version":3,"sources":["../../src/entity-schema/EntitySchemaRelationOptions.ts"],"names":[],"mappings":"","file":"EntitySchemaRelationOptions.js","sourcesContent":["import {JoinColumnOptions} from \"../decorator/options/JoinColumnOptions\";\r\nimport {RelationType} from \"../metadata/types/RelationTypes\";\r\nimport {JoinTableMultipleColumnsOptions} from \"../decorator/options/JoinTableMuplipleColumnsOptions\";\r\nimport {OnDeleteType} from \"../metadata/types/OnDeleteType\";\r\nimport {OnUpdateType} from \"../metadata/types/OnUpdateType\";\r\nimport {JoinTableOptions} from \"../index\";\r\n\r\nexport interface EntitySchemaRelationOptions {\r\n\r\n    /**\r\n     * Indicates with which entity this relation is made.\r\n     */\r\n    target: Function|string;\r\n\r\n    /**\r\n     * Type of relation. Can be one of the value of the RelationTypes class.\r\n     */\r\n    type: RelationType;\r\n\r\n    /**\r\n     * Inverse side of the relation.\r\n     */\r\n    inverseSide?: string;\r\n\r\n    /**\r\n     * Indicates if this relation will be lazily loaded.\r\n     */\r\n    lazy?: boolean;\r\n\r\n    /**\r\n     * Indicates if this relation will be eagerly loaded.\r\n     */\r\n    eager?: boolean;\r\n\r\n    /**\r\n     * Indicates if persistence is enabled for the relation.\r\n     * By default its enabled, but if you want to avoid any changes in the relation to be reflected in the database you can disable it.\r\n     * If its disabled you can only change a relation from inverse side of a relation or using relation query builder functionality.\r\n     * This is useful for performance optimization since its disabling avoid multiple extra queries during entity save.\r\n     */\r\n    persistence?: boolean;\r\n\r\n    /**\r\n     * Indicates if this relation will be a primary key.\r\n     * Can be used only for many-to-one and owner one-to-one relations.\r\n     */\r\n    primary?: boolean;\r\n\r\n    /**\r\n     * Join table options of this column. If set to true then it simply means that it has a join table.\r\n     */\r\n    joinTable?: boolean|JoinTableOptions|JoinTableMultipleColumnsOptions;\r\n\r\n    /**\r\n     * Join column options of this column. If set to true then it simply means that it has a join column.\r\n     */\r\n    joinColumn?: boolean|JoinColumnOptions;\r\n\r\n    /**\r\n     * Indicates if this is a parent (can be only many-to-one relation) relation in the tree tables.\r\n     */\r\n    treeParent?: boolean;\r\n\r\n    /**\r\n     * Indicates if this is a children (can be only one-to-many relation) relation in the tree tables.\r\n     */\r\n    treeChildren?: boolean;\r\n\r\n    /**\r\n     * If set to true then it means that related object can be allowed to be inserted / updated / removed to the db.\r\n     * This is option a shortcut if you would like to set cascadeInsert, cascadeUpdate and cascadeRemove to true.\r\n     */\r\n    cascade?: boolean|(\"insert\"|\"update\"|\"remove\")[];\r\n\r\n    /**\r\n     * Default database value.\r\n     */\r\n    default?: any;\r\n\r\n    /**\r\n     * Indicates if relation column value can be nullable or not.\r\n     */\r\n    nullable?: boolean;\r\n\r\n    /**\r\n     * Database cascade action on delete.\r\n     */\r\n    onDelete?: OnDeleteType;\r\n\r\n    /**\r\n     * Database cascade action on update.\r\n     */\r\n    onUpdate?: OnUpdateType;\r\n\r\n}"],"sourceRoot":".."}